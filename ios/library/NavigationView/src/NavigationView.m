//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: D:\Java\git\core-javafx-widget\AndroidJNavigationView\src\main\java\com\google\android\material\navigation\NavigationView.java
//

#include "ColorStateList.h"
#include "Context.h"
#include "Drawable.h"
#include "HasWidgets.h"
#include "IFragment.h"
#include "J2ObjC_source.h"
#include "MenuBuilder.h"
#include "MenuItem.h"
#include "MenuParser.h"
#include "NavigationMenu.h"
#include "NavigationMenuPresenter.h"
#include "NavigationView.h"
#include "PluginInvoker.h"
#include "RecyclerView.h"
#include "ScrimInsetsFrameLayout.h"
#include "View.h"
#include "java/lang/Math.h"


@interface ADXNavigationView () {
 @public
  ADXNavigationMenu *menu_;
  ADXNavigationMenuPresenter *presenter_;
  jint maxWidth_;
  jboolean topInsetScrimEnabled_;
  jboolean bottomInsetScrimEnabled_;
  jint drawerLayoutCornerSize_;
  jboolean drawerLayoutCornerSizeBackAnimationEnabled_;
  jint drawerLayoutCornerSizeBackAnimationMax_;
}

@end

J2OBJC_FIELD_SETTER(ADXNavigationView, menu_, ADXNavigationMenu *)
J2OBJC_FIELD_SETTER(ADXNavigationView, presenter_, ADXNavigationMenuPresenter *)

inline jint ADXNavigationView_get_PRESENTER_NAVIGATION_VIEW_ID(void);
#define ADXNavigationView_PRESENTER_NAVIGATION_VIEW_ID 1
J2OBJC_STATIC_FIELD_CONSTANT(ADXNavigationView, PRESENTER_NAVIGATION_VIEW_ID, jint)

@interface ADXNavigationView_OnNavigationItemSelectedListener : NSObject

@end

@interface ADXNavigationView_1 : NSObject < ADXMenuBuilder_Callback > {
 @public
  ADXNavigationView *this$0_;
}

- (instancetype)initWithADXNavigationView:(ADXNavigationView *)outer$;

- (jboolean)onMenuItemSelectedWithADXMenuBuilder:(ADXMenuBuilder *)menu
                                  withADMenuItem:(id<ADMenuItem>)item;

- (void)onMenuModeChangeWithADXMenuBuilder:(ADXMenuBuilder *)menu;

@end

J2OBJC_EMPTY_STATIC_INIT(ADXNavigationView_1)

__attribute__((unused)) static void ADXNavigationView_1_initWithADXNavigationView_(ADXNavigationView_1 *self, ADXNavigationView *outer$);

__attribute__((unused)) static ADXNavigationView_1 *new_ADXNavigationView_1_initWithADXNavigationView_(ADXNavigationView *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static ADXNavigationView_1 *create_ADXNavigationView_1_initWithADXNavigationView_(ADXNavigationView *outer$);

@implementation ADXNavigationView

- (void)setNavigationItemSelectedListenerWithADXNavigationView_OnNavigationItemSelectedListener:(id<ADXNavigationView_OnNavigationItemSelectedListener>)listener {
  JreStrongAssign(&self->listener_, listener);
}

- (void)onMeasureWithInt:(jint)widthSpec
                 withInt:(jint)heightSpec {
  switch (ADView_MeasureSpec_getModeWithInt_(widthSpec)) {
    case ADView_MeasureSpec_EXACTLY:
    break;
    case ADView_MeasureSpec_AT_MOST:
    widthSpec = ADView_MeasureSpec_makeMeasureSpecWithInt_withInt_(JavaLangMath_minWithInt_withInt_(ADView_MeasureSpec_getSizeWithInt_(widthSpec), maxWidth_), ADView_MeasureSpec_EXACTLY);
    break;
    case ADView_MeasureSpec_UNSPECIFIED:
    widthSpec = ADView_MeasureSpec_makeMeasureSpecWithInt_withInt_(maxWidth_, ADView_MeasureSpec_EXACTLY);
    break;
  }
  [super onMeasureWithInt:widthSpec withInt:heightSpec];
}

- (void)inflateMenuWithASHasWidgets:(id<ASHasWidgets>)parent
                       withNSString:(NSString *)json
                    withASIFragment:(id<ASIFragment>)fragment {
  [((ADXNavigationMenuPresenter *) nil_chk(presenter_)) setUpdateSuspendedWithBoolean:true];
  ADXMenuParser_parseMenuWithASHasWidgets_withADMenu_withNSString_withASIFragment_(parent, menu_, json, fragment);
  [presenter_ setUpdateSuspendedWithBoolean:false];
  [presenter_ updateMenuViewWithBoolean:false];
}

- (void)addHeaderViewWithADView:(ADView *)view {
  [((ADXNavigationMenuPresenter *) nil_chk(presenter_)) addHeaderViewWithADView:view];
}

- (void)removeHeaderViewWithADView:(ADView *)view {
  [((ADXNavigationMenuPresenter *) nil_chk(presenter_)) removeHeaderViewWithADView:view];
}

- (ADView *)getHeaderViewWithInt:(jint)index {
  return [((ADXNavigationMenuPresenter *) nil_chk(presenter_)) getHeaderViewWithInt:index];
}

- (ADColorStateList *)getItemIconTintList {
  return [((ADXNavigationMenuPresenter *) nil_chk(presenter_)) getItemTintList];
}

- (void)setItemIconTintListWithADColorStateList:(ADColorStateList *)tint {
  [((ADXNavigationMenuPresenter *) nil_chk(presenter_)) setItemIconTintListWithADColorStateList:tint];
}

- (ADColorStateList *)getItemTextColor {
  return [((ADXNavigationMenuPresenter *) nil_chk(presenter_)) getItemTextColor];
}

- (void)setItemTextColorWithADColorStateList:(ADColorStateList *)textColor {
  [((ADXNavigationMenuPresenter *) nil_chk(presenter_)) setItemTextColorWithADColorStateList:textColor];
}

- (ADDrawable *)getItemBackground {
  return [((ADXNavigationMenuPresenter *) nil_chk(presenter_)) getItemBackground];
}

- (void)setItemBackgroundWithADDrawable:(ADDrawable *)itemBackground {
  [((ADXNavigationMenuPresenter *) nil_chk(presenter_)) setItemBackgroundWithADDrawable:itemBackground];
}

- (jint)getItemHorizontalPadding {
  return [((ADXNavigationMenuPresenter *) nil_chk(presenter_)) getItemHorizontalPadding];
}

- (void)setItemHorizontalPaddingWithInt:(jint)padding {
  [((ADXNavigationMenuPresenter *) nil_chk(presenter_)) setItemHorizontalPaddingWithInt:padding];
}

- (jint)getItemVerticalPadding {
  return [((ADXNavigationMenuPresenter *) nil_chk(presenter_)) getItemVerticalPadding];
}

- (void)setItemVerticalPaddingWithInt:(jint)padding {
  [((ADXNavigationMenuPresenter *) nil_chk(presenter_)) setItemVerticalPaddingWithInt:padding];
}

- (jint)getItemIconPadding {
  return [((ADXNavigationMenuPresenter *) nil_chk(presenter_)) getItemIconPadding];
}

- (void)setItemIconPaddingWithInt:(jint)padding {
  [((ADXNavigationMenuPresenter *) nil_chk(presenter_)) setItemIconPaddingWithInt:padding];
}

- (void)setItemTextAppearanceWithNSString:(NSString *)resId {
  [((ADXNavigationMenuPresenter *) nil_chk(presenter_)) setItemTextAppearanceWithNSString:resId];
}

- (void)setItemIconSizeWithInt:(jint)iconSize {
  [((ADXNavigationMenuPresenter *) nil_chk(presenter_)) setItemIconSizeWithInt:iconSize];
}

- (void)setItemMaxLinesWithInt:(jint)itemMaxLines {
  [((ADXNavigationMenuPresenter *) nil_chk(presenter_)) setItemMaxLinesWithInt:itemMaxLines];
}

- (jint)getItemMaxLines {
  return [((ADXNavigationMenuPresenter *) nil_chk(presenter_)) getItemMaxLines];
}

- (void)setDividerInsetStartWithInt:(jint)dividerInsetStart {
  [((ADXNavigationMenuPresenter *) nil_chk(presenter_)) setDividerInsetStartWithInt:dividerInsetStart];
}

- (void)setDividerInsetEndWithInt:(jint)dividerInsetEnd {
  [((ADXNavigationMenuPresenter *) nil_chk(presenter_)) setDividerInsetEndWithInt:dividerInsetEnd];
}

- (void)setSubheaderInsetStartWithInt:(jint)subheaderInsetStart {
  [((ADXNavigationMenuPresenter *) nil_chk(presenter_)) setSubheaderInsetStartWithInt:subheaderInsetStart];
}

- (void)setSubheaderInsetEndWithInt:(jint)subheaderInsetEnd {
  [((ADXNavigationMenuPresenter *) nil_chk(presenter_)) setSubheaderInsetEndWithInt:subheaderInsetEnd];
}

- (void)initNavigationView {
  [((ADXNavigationMenuPresenter *) nil_chk(presenter_)) setIdWithInt:ADXNavigationView_PRESENTER_NAVIGATION_VIEW_ID];
  [presenter_ initForMenuWithADContext:[self getContext] withADXMenuBuilder:self->menu_];
  [((ADXNavigationMenu *) nil_chk(menu_)) addMenuPresenterWithADXMenuPresenter:presenter_];
  [presenter_ getMenuViewWithADViewGroup:self];
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ADXNavigationView_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (ADXNavigationMenu *)getMenu {
  return self->menu_;
}

- (void)dealloc {
  RELEASE_(menu_);
  RELEASE_(presenter_);
  RELEASE_(listener_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 2, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 4, 5, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 6, 7, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 8, 7, -1, -1, -1, -1 },
    { NULL, "LADView;", 0x1, 9, 10, -1, -1, -1, -1 },
    { NULL, "LADColorStateList;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 11, 12, -1, -1, -1, -1 },
    { NULL, "LADColorStateList;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 13, 12, -1, -1, -1, -1 },
    { NULL, "LADDrawable;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 14, 15, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 16, 10, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 17, 10, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 18, 10, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 19, 20, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 21, 10, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 22, 10, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 23, 10, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 24, 10, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 25, 10, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 26, 10, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LADXNavigationMenu;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(setNavigationItemSelectedListenerWithADXNavigationView_OnNavigationItemSelectedListener:);
  methods[1].selector = @selector(onMeasureWithInt:withInt:);
  methods[2].selector = @selector(inflateMenuWithASHasWidgets:withNSString:withASIFragment:);
  methods[3].selector = @selector(addHeaderViewWithADView:);
  methods[4].selector = @selector(removeHeaderViewWithADView:);
  methods[5].selector = @selector(getHeaderViewWithInt:);
  methods[6].selector = @selector(getItemIconTintList);
  methods[7].selector = @selector(setItemIconTintListWithADColorStateList:);
  methods[8].selector = @selector(getItemTextColor);
  methods[9].selector = @selector(setItemTextColorWithADColorStateList:);
  methods[10].selector = @selector(getItemBackground);
  methods[11].selector = @selector(setItemBackgroundWithADDrawable:);
  methods[12].selector = @selector(getItemHorizontalPadding);
  methods[13].selector = @selector(setItemHorizontalPaddingWithInt:);
  methods[14].selector = @selector(getItemVerticalPadding);
  methods[15].selector = @selector(setItemVerticalPaddingWithInt:);
  methods[16].selector = @selector(getItemIconPadding);
  methods[17].selector = @selector(setItemIconPaddingWithInt:);
  methods[18].selector = @selector(setItemTextAppearanceWithNSString:);
  methods[19].selector = @selector(setItemIconSizeWithInt:);
  methods[20].selector = @selector(setItemMaxLinesWithInt:);
  methods[21].selector = @selector(getItemMaxLines);
  methods[22].selector = @selector(setDividerInsetStartWithInt:);
  methods[23].selector = @selector(setDividerInsetEndWithInt:);
  methods[24].selector = @selector(setSubheaderInsetStartWithInt:);
  methods[25].selector = @selector(setSubheaderInsetEndWithInt:);
  methods[26].selector = @selector(initNavigationView);
  methods[27].selector = @selector(init);
  methods[28].selector = @selector(getMenu);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "PRESENTER_NAVIGATION_VIEW_ID", "I", .constantValue.asInt = ADXNavigationView_PRESENTER_NAVIGATION_VIEW_ID, 0x1a, -1, -1, -1, -1 },
    { "menu_", "LADXNavigationMenu;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "presenter_", "LADXNavigationMenuPresenter;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "listener_", "LADXNavigationView_OnNavigationItemSelectedListener;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "maxWidth_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "topInsetScrimEnabled_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "bottomInsetScrimEnabled_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "drawerLayoutCornerSize_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "drawerLayoutCornerSizeBackAnimationEnabled_", "Z", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "drawerLayoutCornerSizeBackAnimationMax_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "setNavigationItemSelectedListener", "LADXNavigationView_OnNavigationItemSelectedListener;", "onMeasure", "II", "inflateMenu", "LASHasWidgets;LNSString;LASIFragment;", "addHeaderView", "LADView;", "removeHeaderView", "getHeaderView", "I", "setItemIconTintList", "LADColorStateList;", "setItemTextColor", "setItemBackground", "LADDrawable;", "setItemHorizontalPadding", "setItemVerticalPadding", "setItemIconPadding", "setItemTextAppearance", "LNSString;", "setItemIconSize", "setItemMaxLines", "setDividerInsetStart", "setDividerInsetEnd", "setSubheaderInsetStart", "setSubheaderInsetEnd" };
  static const J2ObjcClassInfo _ADXNavigationView = { "NavigationView", "com.google.android.material.navigation", ptrTable, methods, fields, 7, 0x1, 29, 10, -1, 1, -1, -1, -1 };
  return &_ADXNavigationView;
}

@end

void ADXNavigationView_init(ADXNavigationView *self) {
  ADXScrimInsetsFrameLayout_init(self);
  JreStrongAssignAndConsume(&self->presenter_, new_ADXNavigationMenuPresenter_init());
  self->topInsetScrimEnabled_ = true;
  self->bottomInsetScrimEnabled_ = true;
  self->drawerLayoutCornerSize_ = 0;
  JreStrongAssignAndConsume(&self->menu_, new_ADXNavigationMenu_initWithADContext_([self getContext]));
  self->drawerLayoutCornerSize_ = 0;
  self->drawerLayoutCornerSizeBackAnimationEnabled_ = (self->drawerLayoutCornerSize_ == 0);
  self->maxWidth_ = 0;
  self->drawerLayoutCornerSizeBackAnimationMax_ = 0;
  [self setItemHorizontalPaddingWithInt:JreFpToInt(ASPluginInvoker_convertDpToPixelWithNSString_(@"22dp"))];
  [self setItemIconPaddingWithInt:JreFpToInt(ASPluginInvoker_convertDpToPixelWithNSString_(@"14dp"))];
  [self setSubheaderInsetStartWithInt:JreFpToInt(ASPluginInvoker_convertDpToPixelWithNSString_(@"22dp"))];
  [self setSubheaderInsetEndWithInt:JreFpToInt(ASPluginInvoker_convertDpToPixelWithNSString_(@"22dp"))];
  [self->menu_ setCallbackWithADXMenuBuilder_Callback:create_ADXNavigationView_1_initWithADXNavigationView_(self)];
}

ADXNavigationView *new_ADXNavigationView_init() {
  J2OBJC_NEW_IMPL(ADXNavigationView, init)
}

ADXNavigationView *create_ADXNavigationView_init() {
  J2OBJC_CREATE_IMPL(ADXNavigationView, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ADXNavigationView)

@implementation ADXNavigationView_OnNavigationItemSelectedListener

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "Z", 0x401, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(onNavigationItemSelectedWithADMenuItem:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "onNavigationItemSelected", "LADMenuItem;", "LADXNavigationView;" };
  static const J2ObjcClassInfo _ADXNavigationView_OnNavigationItemSelectedListener = { "OnNavigationItemSelectedListener", "com.google.android.material.navigation", ptrTable, methods, NULL, 7, 0x609, 1, 0, 2, -1, -1, -1, -1 };
  return &_ADXNavigationView_OnNavigationItemSelectedListener;
}

@end

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(ADXNavigationView_OnNavigationItemSelectedListener)

@implementation ADXNavigationView_1

- (instancetype)initWithADXNavigationView:(ADXNavigationView *)outer$ {
  ADXNavigationView_1_initWithADXNavigationView_(self, outer$);
  return self;
}

- (jboolean)onMenuItemSelectedWithADXMenuBuilder:(ADXMenuBuilder *)menu
                                  withADMenuItem:(id<ADMenuItem>)item {
  return this$0_->listener_ != nil && [this$0_->listener_ onNavigationItemSelectedWithADMenuItem:item];
}

- (void)onMenuModeChangeWithADXMenuBuilder:(ADXMenuBuilder *)menu {
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 4, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithADXNavigationView:);
  methods[1].selector = @selector(onMenuItemSelectedWithADXMenuBuilder:withADMenuItem:);
  methods[2].selector = @selector(onMenuModeChangeWithADXMenuBuilder:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LADXNavigationView;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LADXNavigationView;", "onMenuItemSelected", "LADXMenuBuilder;LADMenuItem;", "onMenuModeChange", "LADXMenuBuilder;", "init" };
  static const J2ObjcClassInfo _ADXNavigationView_1 = { "", "com.google.android.material.navigation", ptrTable, methods, fields, 7, 0x8010, 3, 1, 0, -1, 5, -1, -1 };
  return &_ADXNavigationView_1;
}

@end

void ADXNavigationView_1_initWithADXNavigationView_(ADXNavigationView_1 *self, ADXNavigationView *outer$) {
  JreStrongAssign(&self->this$0_, outer$);
  NSObject_init(self);
}

ADXNavigationView_1 *new_ADXNavigationView_1_initWithADXNavigationView_(ADXNavigationView *outer$) {
  J2OBJC_NEW_IMPL(ADXNavigationView_1, initWithADXNavigationView_, outer$)
}

ADXNavigationView_1 *create_ADXNavigationView_1_initWithADXNavigationView_(ADXNavigationView *outer$) {
  J2OBJC_CREATE_IMPL(ADXNavigationView_1, initWithADXNavigationView_, outer$)
}
