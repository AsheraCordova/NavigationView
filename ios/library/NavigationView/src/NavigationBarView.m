//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: D:\Java\git\core-javafx-widget\AndroidJNavigationView\src\main\java\com\google\android\material\navigation\NavigationBarView.java
//

#include "BadgeDrawable.h"
#include "ColorStateList.h"
#include "Context.h"
#include "Drawable.h"
#include "FrameLayout.h"
#include "HasWidgets.h"
#include "IFragment.h"
#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "MenuBuilder.h"
#include "MenuItem.h"
#include "MenuParser.h"
#include "NavigationBarMenu.h"
#include "NavigationBarMenuView.h"
#include "NavigationBarPresenter.h"
#include "NavigationBarView.h"
#include "PluginInvoker.h"


@interface ADXNavigationBarView () {
 @public
  ADXNavigationBarMenu *menu_;
  ADXNavigationBarMenuView *menuView_;
  ADXNavigationBarPresenter *presenter_;
  ADColorStateList *itemRippleColor_;
  id<ADXNavigationBarView_OnItemSelectedListener> selectedListener_;
  id<ADXNavigationBarView_OnItemReselectedListener> reselectedListener_;
}

@end

J2OBJC_FIELD_SETTER(ADXNavigationBarView, menu_, ADXNavigationBarMenu *)
J2OBJC_FIELD_SETTER(ADXNavigationBarView, menuView_, ADXNavigationBarMenuView *)
J2OBJC_FIELD_SETTER(ADXNavigationBarView, presenter_, ADXNavigationBarPresenter *)
J2OBJC_FIELD_SETTER(ADXNavigationBarView, itemRippleColor_, ADColorStateList *)
J2OBJC_FIELD_SETTER(ADXNavigationBarView, selectedListener_, id<ADXNavigationBarView_OnItemSelectedListener>)
J2OBJC_FIELD_SETTER(ADXNavigationBarView, reselectedListener_, id<ADXNavigationBarView_OnItemReselectedListener>)

inline jint ADXNavigationBarView_get_MENU_PRESENTER_ID(void);
#define ADXNavigationBarView_MENU_PRESENTER_ID 1
J2OBJC_STATIC_FIELD_CONSTANT(ADXNavigationBarView, MENU_PRESENTER_ID, jint)

@interface ADXNavigationBarView_OnItemSelectedListener : NSObject

@end

@interface ADXNavigationBarView_OnItemReselectedListener : NSObject

@end

@interface ADXNavigationBarView_1 : NSObject < ADXMenuBuilder_Callback > {
 @public
  ADXNavigationBarView *this$0_;
}

- (instancetype)initWithADXNavigationBarView:(ADXNavigationBarView *)outer$;

- (jboolean)onMenuItemSelectedWithADXMenuBuilder:(ADXMenuBuilder *)menu
                                  withADMenuItem:(id<ADMenuItem>)item;

- (void)onMenuModeChangeWithADXMenuBuilder:(ADXMenuBuilder *)menu;

@end

J2OBJC_EMPTY_STATIC_INIT(ADXNavigationBarView_1)

__attribute__((unused)) static void ADXNavigationBarView_1_initWithADXNavigationBarView_(ADXNavigationBarView_1 *self, ADXNavigationBarView *outer$);

__attribute__((unused)) static ADXNavigationBarView_1 *new_ADXNavigationBarView_1_initWithADXNavigationBarView_(ADXNavigationBarView *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static ADXNavigationBarView_1 *create_ADXNavigationBarView_1_initWithADXNavigationBarView_(ADXNavigationBarView *outer$);

@implementation ADXNavigationBarView

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ADXNavigationBarView_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)setOnItemSelectedListenerWithADXNavigationBarView_OnItemSelectedListener:(id<ADXNavigationBarView_OnItemSelectedListener>)listener {
  JreStrongAssign(&selectedListener_, listener);
}

- (void)setOnItemReselectedListenerWithADXNavigationBarView_OnItemReselectedListener:(id<ADXNavigationBarView_OnItemReselectedListener>)listener {
  JreStrongAssign(&reselectedListener_, listener);
}

- (ADXNavigationBarMenu *)getMenu {
  return menu_;
}

- (ADXNavigationBarMenuView *)getMenuView {
  return menuView_;
}

- (void)inflateMenuWithASHasWidgets:(id<ASHasWidgets>)parent
                       withNSString:(NSString *)json
                    withASIFragment:(id<ASIFragment>)fragment {
  [((ADXNavigationBarPresenter *) nil_chk(presenter_)) setUpdateSuspendedWithBoolean:true];
  ADXMenuParser_parseMenuWithASHasWidgets_withADMenu_withNSString_withASIFragment_(parent, menu_, json, fragment);
  [((ADXNavigationBarPresenter *) nil_chk(presenter_)) setUpdateSuspendedWithBoolean:false];
  [((ADXNavigationBarPresenter *) nil_chk(presenter_)) updateMenuViewWithBoolean:true];
}

- (void)setItemIconTintListWithADColorStateList:(ADColorStateList *)tint {
  [((ADXNavigationBarMenuView *) nil_chk(menuView_)) setIconTintListWithADColorStateList:tint];
}

- (void)setItemIconSizeWithInt:(jint)iconSize {
  [((ADXNavigationBarMenuView *) nil_chk(menuView_)) setItemIconSizeWithInt:iconSize];
}

- (void)setItemTextColorWithADColorStateList:(ADColorStateList *)textColor {
  [((ADXNavigationBarMenuView *) nil_chk(menuView_)) setItemTextColorWithADColorStateList:textColor];
}

- (void)setItemBackgroundWithADDrawable:(ADDrawable *)background {
  [((ADXNavigationBarMenuView *) nil_chk(menuView_)) setItemBackgroundWithADDrawable:background];
  JreStrongAssign(&itemRippleColor_, nil);
}

- (jint)getSelectedItemId {
  return [((ADXNavigationBarMenuView *) nil_chk(menuView_)) getSelectedItemId];
}

- (void)setSelectedItemIdWithInt:(jint)itemId {
  id<ADMenuItem> item = JreRetainedLocalValue([((ADXNavigationBarMenu *) nil_chk(menu_)) findItemWithInt:itemId]);
  if (item != nil) {
    if (![((ADXNavigationBarMenu *) nil_chk(menu_)) performItemActionWithADMenuItem:item withADXMenuPresenter:presenter_ withInt:0]) {
      [item setCheckedWithBoolean:true];
    }
  }
}

- (void)setLabelVisibilityModeWithInt:(jint)labelVisibilityMode {
  if ([((ADXNavigationBarMenuView *) nil_chk(menuView_)) getLabelVisibilityMode] != labelVisibilityMode) {
    [((ADXNavigationBarMenuView *) nil_chk(menuView_)) setLabelVisibilityModeWithInt:labelVisibilityMode];
    [((ADXNavigationBarPresenter *) nil_chk(presenter_)) updateMenuViewWithBoolean:false];
  }
}

- (void)setItemTextAppearanceInactiveWithNSString:(NSString *)textAppearanceRes {
  [((ADXNavigationBarMenuView *) nil_chk(menuView_)) setItemTextAppearanceInactiveWithNSString:textAppearanceRes];
}

- (void)setItemTextAppearanceActiveWithNSString:(NSString *)textAppearanceRes {
  [((ADXNavigationBarMenuView *) nil_chk(menuView_)) setItemTextAppearanceActiveWithNSString:textAppearanceRes];
}

- (ADXBadgeDrawable *)getOrCreateBadgeWithInt:(jint)menuItemId {
  return [((ADXNavigationBarMenuView *) nil_chk(menuView_)) getOrCreateBadgeWithInt:menuItemId];
}

- (jint)getMaxItemCount {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (ADXNavigationBarMenuView *)createNavigationBarMenuViewWithADContext:(ADContext *)context {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (ADXNavigationBarPresenter *)getPresenter {
  return presenter_;
}

- (void)requestLayout {
  [super requestLayout];
  if (menuView_ != nil) {
    [menuView_ requestLayout];
  }
}

- (void)initNavigationBarView {
  JreStrongAssignAndConsume(&self->menu_, new_ADXNavigationBarMenu_initWithIOSClass_withInt_([self java_getClass], [self getMaxItemCount]));
  JreStrongAssign(&menuView_, [self createNavigationBarMenuViewWithADContext:[self getContext]]);
  [((ADXNavigationBarPresenter *) nil_chk(presenter_)) setMenuViewWithADXNavigationBarMenuView:menuView_];
  [((ADXNavigationBarPresenter *) nil_chk(presenter_)) setIdWithInt:ADXNavigationBarView_MENU_PRESENTER_ID];
  [((ADXNavigationBarMenuView *) nil_chk(menuView_)) setPresenterWithADXNavigationBarPresenter:presenter_];
  [((ADXNavigationBarMenu *) nil_chk(self->menu_)) addMenuPresenterWithADXMenuPresenter:presenter_];
  [((ADXNavigationBarPresenter *) nil_chk(presenter_)) initForMenuWithADContext:[self getContext] withADXMenuBuilder:self->menu_];
  [((ADXNavigationBarMenuView *) nil_chk(menuView_)) setLabelVisibilityModeWithInt:ADXNavigationBarView_LABEL_VISIBILITY_AUTO];
  [((ADXNavigationBarMenuView *) nil_chk(menuView_)) setItemIconSizeWithInt:JreFpToInt(ASPluginInvoker_convertDpToPixelWithNSString_(@"24dp"))];
  [((ADXNavigationBarMenuView *) nil_chk(menuView_)) setIconTintListWithADColorStateList:[menuView_ createDefaultColorStateListWithInt:0]];
  [((ADXNavigationBarMenu *) nil_chk(self->menu_)) setCallbackWithADXMenuBuilder_Callback:create_ADXNavigationBarView_1_initWithADXNavigationBarView_(self)];
}

- (void)dealloc {
  RELEASE_(menu_);
  RELEASE_(menuView_);
  RELEASE_(presenter_);
  RELEASE_(itemRippleColor_);
  RELEASE_(selectedListener_);
  RELEASE_(reselectedListener_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "LADXNavigationBarMenu;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LADXNavigationBarMenuView;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 4, 5, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 6, 7, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 8, 9, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 10, 7, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 11, 12, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 13, 9, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 14, 9, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 15, 16, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 17, 16, -1, -1, -1, -1 },
    { NULL, "LADXBadgeDrawable;", 0x1, 18, 9, -1, -1, -1, -1 },
    { NULL, "I", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "LADXNavigationBarMenuView;", 0x404, 19, 20, -1, -1, -1, -1 },
    { NULL, "LADXNavigationBarPresenter;", 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(setOnItemSelectedListenerWithADXNavigationBarView_OnItemSelectedListener:);
  methods[2].selector = @selector(setOnItemReselectedListenerWithADXNavigationBarView_OnItemReselectedListener:);
  methods[3].selector = @selector(getMenu);
  methods[4].selector = @selector(getMenuView);
  methods[5].selector = @selector(inflateMenuWithASHasWidgets:withNSString:withASIFragment:);
  methods[6].selector = @selector(setItemIconTintListWithADColorStateList:);
  methods[7].selector = @selector(setItemIconSizeWithInt:);
  methods[8].selector = @selector(setItemTextColorWithADColorStateList:);
  methods[9].selector = @selector(setItemBackgroundWithADDrawable:);
  methods[10].selector = @selector(getSelectedItemId);
  methods[11].selector = @selector(setSelectedItemIdWithInt:);
  methods[12].selector = @selector(setLabelVisibilityModeWithInt:);
  methods[13].selector = @selector(setItemTextAppearanceInactiveWithNSString:);
  methods[14].selector = @selector(setItemTextAppearanceActiveWithNSString:);
  methods[15].selector = @selector(getOrCreateBadgeWithInt:);
  methods[16].selector = @selector(getMaxItemCount);
  methods[17].selector = @selector(createNavigationBarMenuViewWithADContext:);
  methods[18].selector = @selector(getPresenter);
  methods[19].selector = @selector(requestLayout);
  methods[20].selector = @selector(initNavigationBarView);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "LABEL_VISIBILITY_AUTO", "I", .constantValue.asInt = ADXNavigationBarView_LABEL_VISIBILITY_AUTO, 0x19, -1, -1, -1, -1 },
    { "LABEL_VISIBILITY_SELECTED", "I", .constantValue.asInt = ADXNavigationBarView_LABEL_VISIBILITY_SELECTED, 0x19, -1, -1, -1, -1 },
    { "LABEL_VISIBILITY_LABELED", "I", .constantValue.asInt = ADXNavigationBarView_LABEL_VISIBILITY_LABELED, 0x19, -1, -1, -1, -1 },
    { "LABEL_VISIBILITY_UNLABELED", "I", .constantValue.asInt = ADXNavigationBarView_LABEL_VISIBILITY_UNLABELED, 0x19, -1, -1, -1, -1 },
    { "MENU_PRESENTER_ID", "I", .constantValue.asInt = ADXNavigationBarView_MENU_PRESENTER_ID, 0x1a, -1, -1, -1, -1 },
    { "menu_", "LADXNavigationBarMenu;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "menuView_", "LADXNavigationBarMenuView;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "presenter_", "LADXNavigationBarPresenter;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "itemRippleColor_", "LADColorStateList;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "selectedListener_", "LADXNavigationBarView_OnItemSelectedListener;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "reselectedListener_", "LADXNavigationBarView_OnItemReselectedListener;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "setOnItemSelectedListener", "LADXNavigationBarView_OnItemSelectedListener;", "setOnItemReselectedListener", "LADXNavigationBarView_OnItemReselectedListener;", "inflateMenu", "LASHasWidgets;LNSString;LASIFragment;", "setItemIconTintList", "LADColorStateList;", "setItemIconSize", "I", "setItemTextColor", "setItemBackground", "LADDrawable;", "setSelectedItemId", "setLabelVisibilityMode", "setItemTextAppearanceInactive", "LNSString;", "setItemTextAppearanceActive", "getOrCreateBadge", "createNavigationBarMenuView", "LADContext;", "LADXNavigationBarView_OnItemSelectedListener;LADXNavigationBarView_OnItemReselectedListener;" };
  static const J2ObjcClassInfo _ADXNavigationBarView = { "NavigationBarView", "com.google.android.material.navigation", ptrTable, methods, fields, 7, 0x401, 21, 11, -1, 21, -1, -1, -1 };
  return &_ADXNavigationBarView;
}

@end

void ADXNavigationBarView_init(ADXNavigationBarView *self) {
  ADFrameLayout_init(self);
  JreStrongAssignAndConsume(&self->presenter_, new_ADXNavigationBarPresenter_init());
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ADXNavigationBarView)

@implementation ADXNavigationBarView_OnItemSelectedListener

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "Z", 0x401, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(onNavigationItemSelectedWithADMenuItem:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "onNavigationItemSelected", "LADMenuItem;", "LADXNavigationBarView;" };
  static const J2ObjcClassInfo _ADXNavigationBarView_OnItemSelectedListener = { "OnItemSelectedListener", "com.google.android.material.navigation", ptrTable, methods, NULL, 7, 0x609, 1, 0, 2, -1, -1, -1, -1 };
  return &_ADXNavigationBarView_OnItemSelectedListener;
}

@end

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(ADXNavigationBarView_OnItemSelectedListener)

@implementation ADXNavigationBarView_OnItemReselectedListener

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x401, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(onNavigationItemReselectedWithADMenuItem:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "onNavigationItemReselected", "LADMenuItem;", "LADXNavigationBarView;" };
  static const J2ObjcClassInfo _ADXNavigationBarView_OnItemReselectedListener = { "OnItemReselectedListener", "com.google.android.material.navigation", ptrTable, methods, NULL, 7, 0x609, 1, 0, 2, -1, -1, -1, -1 };
  return &_ADXNavigationBarView_OnItemReselectedListener;
}

@end

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(ADXNavigationBarView_OnItemReselectedListener)

@implementation ADXNavigationBarView_1

- (instancetype)initWithADXNavigationBarView:(ADXNavigationBarView *)outer$ {
  ADXNavigationBarView_1_initWithADXNavigationBarView_(self, outer$);
  return self;
}

- (jboolean)onMenuItemSelectedWithADXMenuBuilder:(ADXMenuBuilder *)menu
                                  withADMenuItem:(id<ADMenuItem>)item {
  if (this$0_->reselectedListener_ != nil && [((id<ADMenuItem>) nil_chk(item)) getItemId] == [this$0_ getSelectedItemId]) {
    [this$0_->reselectedListener_ onNavigationItemReselectedWithADMenuItem:item];
    return true;
  }
  return this$0_->selectedListener_ != nil && ![this$0_->selectedListener_ onNavigationItemSelectedWithADMenuItem:item];
}

- (void)onMenuModeChangeWithADXMenuBuilder:(ADXMenuBuilder *)menu {
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 4, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithADXNavigationBarView:);
  methods[1].selector = @selector(onMenuItemSelectedWithADXMenuBuilder:withADMenuItem:);
  methods[2].selector = @selector(onMenuModeChangeWithADXMenuBuilder:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LADXNavigationBarView;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LADXNavigationBarView;", "onMenuItemSelected", "LADXMenuBuilder;LADMenuItem;", "onMenuModeChange", "LADXMenuBuilder;", "initNavigationBarView" };
  static const J2ObjcClassInfo _ADXNavigationBarView_1 = { "", "com.google.android.material.navigation", ptrTable, methods, fields, 7, 0x8010, 3, 1, 0, -1, 5, -1, -1 };
  return &_ADXNavigationBarView_1;
}

@end

void ADXNavigationBarView_1_initWithADXNavigationBarView_(ADXNavigationBarView_1 *self, ADXNavigationBarView *outer$) {
  JreStrongAssign(&self->this$0_, outer$);
  NSObject_init(self);
}

ADXNavigationBarView_1 *new_ADXNavigationBarView_1_initWithADXNavigationBarView_(ADXNavigationBarView *outer$) {
  J2OBJC_NEW_IMPL(ADXNavigationBarView_1, initWithADXNavigationBarView_, outer$)
}

ADXNavigationBarView_1 *create_ADXNavigationBarView_1_initWithADXNavigationBarView_(ADXNavigationBarView *outer$) {
  J2OBJC_CREATE_IMPL(ADXNavigationBarView_1, initWithADXNavigationBarView_, outer$)
}
