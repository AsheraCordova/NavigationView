//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: D:\Java\git\core-javafx-widget\AndroidJNavigationView\src\main\java\com\google\android\material\internal\NavigationMenuPresenter.java
//

#define J2OBJC_IMPORTED_BY_JAVA_IMPLEMENTATION 1




#include "ColorStateList.h"
#include "Context.h"
#include "Drawable.h"
#include "HasWidgets.h"
#include "ILifeCycleDecorator.h"
#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IWidget.h"
#include "J2ObjC_source.h"
#include "LinearLayout.h"
#include "MenuBuilder.h"
#include "MenuItem.h"
#include "MenuItemImpl.h"
#include "NavigationMenuItemView.h"
#include "NavigationMenuPresenter.h"
#include "PluginInvoker.h"
#include "RecyclerView.h"
#include "SubMenuBuilder.h"
#include "TextView.h"
#include "View.h"
#include "ViewGroup.h"
#include "ViewParent.h"
#include "java/lang/Boolean.h"
#include "java/lang/Integer.h"
#include "java/lang/RuntimeException.h"
#include "java/util/ArrayList.h"


@class NSString;


#pragma clang diagnostic error "-Wreturn-type"
#pragma clang diagnostic ignored "-Wswitch"


#pragma clang diagnostic ignored "-Wincomplete-implementation"

@interface ADXNavigationMenuPresenter () {
 @public
  ADXRecyclerView *menuView_;
  int32_t id__;
  int32_t itemMaxLines_;
  int32_t paddingTopDefault_;
  int32_t overScrollMode_;
  NSString *textAppearance_;
}

- (bool)hasHeader;

- (ADView *)getNavigationMenuItemViewWithADView:(ADView *)v;

@end

J2OBJC_FIELD_SETTER(ADXNavigationMenuPresenter, menuView_, ADXRecyclerView *)
J2OBJC_FIELD_SETTER(ADXNavigationMenuPresenter, textAppearance_, NSString *)

__attribute__((unused)) static bool ADXNavigationMenuPresenter_hasHeader(ADXNavigationMenuPresenter *self);

__attribute__((unused)) static ADView *ADXNavigationMenuPresenter_getNavigationMenuItemViewWithADView_(ADXNavigationMenuPresenter *self, ADView *v);

@interface ADXNavigationMenuPresenter_NormalViewHolder : ADXNavigationMenuPresenter_ViewHolder

- (instancetype)initWithADXNavigationMenuPresenter_LayoutInflater:(ADXNavigationMenuPresenter_LayoutInflater *)inflater
                                                  withADViewGroup:(ADViewGroup *)parent
                                       withADView_OnClickListener:(id<ADView_OnClickListener>)listener;

@end

J2OBJC_EMPTY_STATIC_INIT(ADXNavigationMenuPresenter_NormalViewHolder)

__attribute__((unused)) static void ADXNavigationMenuPresenter_NormalViewHolder_initWithADXNavigationMenuPresenter_LayoutInflater_withADViewGroup_withADView_OnClickListener_(ADXNavigationMenuPresenter_NormalViewHolder *self, ADXNavigationMenuPresenter_LayoutInflater *inflater, ADViewGroup *parent, id<ADView_OnClickListener> listener);

__attribute__((unused)) static ADXNavigationMenuPresenter_NormalViewHolder *new_ADXNavigationMenuPresenter_NormalViewHolder_initWithADXNavigationMenuPresenter_LayoutInflater_withADViewGroup_withADView_OnClickListener_(ADXNavigationMenuPresenter_LayoutInflater *inflater, ADViewGroup *parent, id<ADView_OnClickListener> listener) NS_RETURNS_RETAINED;

__attribute__((unused)) static ADXNavigationMenuPresenter_NormalViewHolder *create_ADXNavigationMenuPresenter_NormalViewHolder_initWithADXNavigationMenuPresenter_LayoutInflater_withADViewGroup_withADView_OnClickListener_(ADXNavigationMenuPresenter_LayoutInflater *inflater, ADViewGroup *parent, id<ADView_OnClickListener> listener);

J2OBJC_TYPE_LITERAL_HEADER(ADXNavigationMenuPresenter_NormalViewHolder)


@interface ADXNavigationMenuPresenter_SubheaderViewHolder : ADXNavigationMenuPresenter_ViewHolder

- (instancetype)initWithADXNavigationMenuPresenter_LayoutInflater:(ADXNavigationMenuPresenter_LayoutInflater *)inflater
                                                  withADViewGroup:(ADViewGroup *)parent;

@end

J2OBJC_EMPTY_STATIC_INIT(ADXNavigationMenuPresenter_SubheaderViewHolder)

__attribute__((unused)) static void ADXNavigationMenuPresenter_SubheaderViewHolder_initWithADXNavigationMenuPresenter_LayoutInflater_withADViewGroup_(ADXNavigationMenuPresenter_SubheaderViewHolder *self, ADXNavigationMenuPresenter_LayoutInflater *inflater, ADViewGroup *parent);

__attribute__((unused)) static ADXNavigationMenuPresenter_SubheaderViewHolder *new_ADXNavigationMenuPresenter_SubheaderViewHolder_initWithADXNavigationMenuPresenter_LayoutInflater_withADViewGroup_(ADXNavigationMenuPresenter_LayoutInflater *inflater, ADViewGroup *parent) NS_RETURNS_RETAINED;

__attribute__((unused)) static ADXNavigationMenuPresenter_SubheaderViewHolder *create_ADXNavigationMenuPresenter_SubheaderViewHolder_initWithADXNavigationMenuPresenter_LayoutInflater_withADViewGroup_(ADXNavigationMenuPresenter_LayoutInflater *inflater, ADViewGroup *parent);

J2OBJC_TYPE_LITERAL_HEADER(ADXNavigationMenuPresenter_SubheaderViewHolder)


@interface ADXNavigationMenuPresenter_SeparatorViewHolder : ADXNavigationMenuPresenter_ViewHolder

- (instancetype)initWithADXNavigationMenuPresenter_LayoutInflater:(ADXNavigationMenuPresenter_LayoutInflater *)inflater
                                                  withADViewGroup:(ADViewGroup *)parent;

@end

J2OBJC_EMPTY_STATIC_INIT(ADXNavigationMenuPresenter_SeparatorViewHolder)

__attribute__((unused)) static void ADXNavigationMenuPresenter_SeparatorViewHolder_initWithADXNavigationMenuPresenter_LayoutInflater_withADViewGroup_(ADXNavigationMenuPresenter_SeparatorViewHolder *self, ADXNavigationMenuPresenter_LayoutInflater *inflater, ADViewGroup *parent);

__attribute__((unused)) static ADXNavigationMenuPresenter_SeparatorViewHolder *new_ADXNavigationMenuPresenter_SeparatorViewHolder_initWithADXNavigationMenuPresenter_LayoutInflater_withADViewGroup_(ADXNavigationMenuPresenter_LayoutInflater *inflater, ADViewGroup *parent) NS_RETURNS_RETAINED;

__attribute__((unused)) static ADXNavigationMenuPresenter_SeparatorViewHolder *create_ADXNavigationMenuPresenter_SeparatorViewHolder_initWithADXNavigationMenuPresenter_LayoutInflater_withADViewGroup_(ADXNavigationMenuPresenter_LayoutInflater *inflater, ADViewGroup *parent);

J2OBJC_TYPE_LITERAL_HEADER(ADXNavigationMenuPresenter_SeparatorViewHolder)


@interface ADXNavigationMenuPresenter_HeaderViewHolder : ADXNavigationMenuPresenter_ViewHolder

- (instancetype)initWithADView:(ADView *)itemView;

@end

J2OBJC_EMPTY_STATIC_INIT(ADXNavigationMenuPresenter_HeaderViewHolder)

__attribute__((unused)) static void ADXNavigationMenuPresenter_HeaderViewHolder_initWithADView_(ADXNavigationMenuPresenter_HeaderViewHolder *self, ADView *itemView);

__attribute__((unused)) static ADXNavigationMenuPresenter_HeaderViewHolder *new_ADXNavigationMenuPresenter_HeaderViewHolder_initWithADView_(ADView *itemView) NS_RETURNS_RETAINED;

__attribute__((unused)) static ADXNavigationMenuPresenter_HeaderViewHolder *create_ADXNavigationMenuPresenter_HeaderViewHolder_initWithADView_(ADView *itemView);

J2OBJC_TYPE_LITERAL_HEADER(ADXNavigationMenuPresenter_HeaderViewHolder)


@interface ADXNavigationMenuPresenter_1 : NSObject < ADView_OnClickListener > {
 @public
  ADXNavigationMenuPresenter *this$0_;
}

- (instancetype)initWithADXNavigationMenuPresenter:(ADXNavigationMenuPresenter *)outer$;

- (void)onClickWithADView:(ADView *)view;

@end

J2OBJC_EMPTY_STATIC_INIT(ADXNavigationMenuPresenter_1)

__attribute__((unused)) static void ADXNavigationMenuPresenter_1_initWithADXNavigationMenuPresenter_(ADXNavigationMenuPresenter_1 *self, ADXNavigationMenuPresenter *outer$);

__attribute__((unused)) static ADXNavigationMenuPresenter_1 *new_ADXNavigationMenuPresenter_1_initWithADXNavigationMenuPresenter_(ADXNavigationMenuPresenter *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static ADXNavigationMenuPresenter_1 *create_ADXNavigationMenuPresenter_1_initWithADXNavigationMenuPresenter_(ADXNavigationMenuPresenter *outer$);


@interface ADXNavigationMenuPresenter_NavigationMenuAdapter () {
 @public
  ADXNavigationMenuPresenter *this$0_;
  JavaUtilArrayList *items_;
  ADXMenuItemImpl *checkedItem_;
  bool updateSuspended_;
}

- (instancetype)initWithADXNavigationMenuPresenter:(ADXNavigationMenuPresenter *)outer$;

- (void)prepareMenuItems;

- (void)appendTransparentIconIfMissingWithInt:(int32_t)startIndex
                                      withInt:(int32_t)endIndex;

@end

J2OBJC_FIELD_SETTER(ADXNavigationMenuPresenter_NavigationMenuAdapter, items_, JavaUtilArrayList *)
J2OBJC_FIELD_SETTER(ADXNavigationMenuPresenter_NavigationMenuAdapter, checkedItem_, ADXMenuItemImpl *)

inline int32_t ADXNavigationMenuPresenter_NavigationMenuAdapter_get_VIEW_TYPE_NORMAL(void);
#define ADXNavigationMenuPresenter_NavigationMenuAdapter_VIEW_TYPE_NORMAL 0
J2OBJC_STATIC_FIELD_CONSTANT(ADXNavigationMenuPresenter_NavigationMenuAdapter, VIEW_TYPE_NORMAL, int32_t)

inline int32_t ADXNavigationMenuPresenter_NavigationMenuAdapter_get_VIEW_TYPE_SUBHEADER(void);
#define ADXNavigationMenuPresenter_NavigationMenuAdapter_VIEW_TYPE_SUBHEADER 1
J2OBJC_STATIC_FIELD_CONSTANT(ADXNavigationMenuPresenter_NavigationMenuAdapter, VIEW_TYPE_SUBHEADER, int32_t)

inline int32_t ADXNavigationMenuPresenter_NavigationMenuAdapter_get_VIEW_TYPE_SEPARATOR(void);
#define ADXNavigationMenuPresenter_NavigationMenuAdapter_VIEW_TYPE_SEPARATOR 2
J2OBJC_STATIC_FIELD_CONSTANT(ADXNavigationMenuPresenter_NavigationMenuAdapter, VIEW_TYPE_SEPARATOR, int32_t)

inline int32_t ADXNavigationMenuPresenter_NavigationMenuAdapter_get_VIEW_TYPE_HEADER(void);
#define ADXNavigationMenuPresenter_NavigationMenuAdapter_VIEW_TYPE_HEADER 3
J2OBJC_STATIC_FIELD_CONSTANT(ADXNavigationMenuPresenter_NavigationMenuAdapter, VIEW_TYPE_HEADER, int32_t)

__attribute__((unused)) static void ADXNavigationMenuPresenter_NavigationMenuAdapter_initWithADXNavigationMenuPresenter_(ADXNavigationMenuPresenter_NavigationMenuAdapter *self, ADXNavigationMenuPresenter *outer$);

__attribute__((unused)) static ADXNavigationMenuPresenter_NavigationMenuAdapter *new_ADXNavigationMenuPresenter_NavigationMenuAdapter_initWithADXNavigationMenuPresenter_(ADXNavigationMenuPresenter *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static ADXNavigationMenuPresenter_NavigationMenuAdapter *create_ADXNavigationMenuPresenter_NavigationMenuAdapter_initWithADXNavigationMenuPresenter_(ADXNavigationMenuPresenter *outer$);

__attribute__((unused)) static void ADXNavigationMenuPresenter_NavigationMenuAdapter_prepareMenuItems(ADXNavigationMenuPresenter_NavigationMenuAdapter *self);

__attribute__((unused)) static void ADXNavigationMenuPresenter_NavigationMenuAdapter_appendTransparentIconIfMissingWithInt_withInt_(ADXNavigationMenuPresenter_NavigationMenuAdapter *self, int32_t startIndex, int32_t endIndex);

@protocol ADXNavigationMenuPresenter_NavigationMenuItem < JavaObject >

@end

@interface ADXNavigationMenuPresenter_NavigationMenuItem : NSObject

@end

J2OBJC_EMPTY_STATIC_INIT(ADXNavigationMenuPresenter_NavigationMenuItem)

J2OBJC_TYPE_LITERAL_HEADER(ADXNavigationMenuPresenter_NavigationMenuItem)


@interface ADXNavigationMenuPresenter_NavigationMenuTextItem : NSObject < ADXNavigationMenuPresenter_NavigationMenuItem > {
 @public
  ADXMenuItemImpl *menuItem_;
  bool needsEmptyIcon_;
}

- (instancetype)initWithADXMenuItemImpl:(ADXMenuItemImpl *)item;

- (ADXMenuItemImpl *)getMenuItem;

@end

J2OBJC_EMPTY_STATIC_INIT(ADXNavigationMenuPresenter_NavigationMenuTextItem)

J2OBJC_FIELD_SETTER(ADXNavigationMenuPresenter_NavigationMenuTextItem, menuItem_, ADXMenuItemImpl *)

__attribute__((unused)) static void ADXNavigationMenuPresenter_NavigationMenuTextItem_initWithADXMenuItemImpl_(ADXNavigationMenuPresenter_NavigationMenuTextItem *self, ADXMenuItemImpl *item);

__attribute__((unused)) static ADXNavigationMenuPresenter_NavigationMenuTextItem *new_ADXNavigationMenuPresenter_NavigationMenuTextItem_initWithADXMenuItemImpl_(ADXMenuItemImpl *item) NS_RETURNS_RETAINED;

__attribute__((unused)) static ADXNavigationMenuPresenter_NavigationMenuTextItem *create_ADXNavigationMenuPresenter_NavigationMenuTextItem_initWithADXMenuItemImpl_(ADXMenuItemImpl *item);

J2OBJC_TYPE_LITERAL_HEADER(ADXNavigationMenuPresenter_NavigationMenuTextItem)


@interface ADXNavigationMenuPresenter_NavigationMenuSeparatorItem : NSObject < ADXNavigationMenuPresenter_NavigationMenuItem > {
 @public
  int32_t paddingTop_;
  int32_t paddingBottom_;
}

- (instancetype)initWithInt:(int32_t)paddingTop
                    withInt:(int32_t)paddingBottom;

- (int32_t)getPaddingTop;

- (int32_t)getPaddingBottom;

@end

J2OBJC_EMPTY_STATIC_INIT(ADXNavigationMenuPresenter_NavigationMenuSeparatorItem)

__attribute__((unused)) static void ADXNavigationMenuPresenter_NavigationMenuSeparatorItem_initWithInt_withInt_(ADXNavigationMenuPresenter_NavigationMenuSeparatorItem *self, int32_t paddingTop, int32_t paddingBottom);

__attribute__((unused)) static ADXNavigationMenuPresenter_NavigationMenuSeparatorItem *new_ADXNavigationMenuPresenter_NavigationMenuSeparatorItem_initWithInt_withInt_(int32_t paddingTop, int32_t paddingBottom) NS_RETURNS_RETAINED;

__attribute__((unused)) static ADXNavigationMenuPresenter_NavigationMenuSeparatorItem *create_ADXNavigationMenuPresenter_NavigationMenuSeparatorItem_initWithInt_withInt_(int32_t paddingTop, int32_t paddingBottom);

J2OBJC_TYPE_LITERAL_HEADER(ADXNavigationMenuPresenter_NavigationMenuSeparatorItem)


@interface ADXNavigationMenuPresenter_NavigationMenuHeaderItem : NSObject < ADXNavigationMenuPresenter_NavigationMenuItem >

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(ADXNavigationMenuPresenter_NavigationMenuHeaderItem)

__attribute__((unused)) static void ADXNavigationMenuPresenter_NavigationMenuHeaderItem_init(ADXNavigationMenuPresenter_NavigationMenuHeaderItem *self);

__attribute__((unused)) static ADXNavigationMenuPresenter_NavigationMenuHeaderItem *new_ADXNavigationMenuPresenter_NavigationMenuHeaderItem_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static ADXNavigationMenuPresenter_NavigationMenuHeaderItem *create_ADXNavigationMenuPresenter_NavigationMenuHeaderItem_init(void);

J2OBJC_TYPE_LITERAL_HEADER(ADXNavigationMenuPresenter_NavigationMenuHeaderItem)


@implementation ADXNavigationMenuPresenter

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ADXNavigationMenuPresenter_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)initForMenuWithADContext:(ADContext *)context
              withADXMenuBuilder:(ADXMenuBuilder *)menu {
  JreStrongAssign(&layoutInflater_, ADXNavigationMenuPresenter_LayoutInflater_fromWithADContext_(context));
  JreStrongAssign(&self->menu_, menu);
}

- (ADXRecyclerView *)getMenuViewWithADViewGroup:(ADViewGroup *)root {
  if (menuView_ == nil) {
    JreStrongAssign(&menuView_, (ADXRecyclerView *) cast_chk([((ADXNavigationMenuPresenter_LayoutInflater *) nil_chk(layoutInflater_)) inflateWithNSString:@"@layout/design_navigation_menu_new" withADViewGroup:root withBoolean:false], [ADXRecyclerView class]));
    if (adapter_ == nil) {
      JreStrongAssignAndConsume(&adapter_, new_ADXNavigationMenuPresenter_NavigationMenuAdapter_initWithADXNavigationMenuPresenter_(self));
      [adapter_ setHasStableIdsWithBoolean:true];
    }
    if (overScrollMode_ != -1) {
      [((ADXRecyclerView *) nil_chk(menuView_)) setOverScrollModeWithInt:overScrollMode_];
    }
    [((ADXRecyclerView *) nil_chk(menuView_)) setAdapterWithADXRecyclerView_Adapter:adapter_];
  }
  return menuView_;
}

- (void)updateMenuViewWithBoolean:(bool)cleared {
  if (adapter_ != nil) {
    [adapter_ update];
  }
}

- (bool)flagActionItems {
  return false;
}

- (void)setIdWithInt:(int32_t)id_ {
  self->id__ = id_;
}

- (void)addHeaderViewWithADView:(ADView *)view {
  [((ADLinearLayout *) nil_chk(headerLayout_)) addViewWithADView:view];
  [((ADXRecyclerView *) nil_chk(menuView_)) setPaddingWithInt:0 withInt:0 withInt:0 withInt:[menuView_ getPaddingBottom]];
}

- (void)removeHeaderViewWithADView:(ADView *)view {
  [((ADLinearLayout *) nil_chk(headerLayout_)) removeViewWithADView:view];
  if (!ADXNavigationMenuPresenter_hasHeader(self)) {
    [((ADXRecyclerView *) nil_chk(menuView_)) setPaddingWithInt:0 withInt:paddingTopDefault_ withInt:0 withInt:[menuView_ getPaddingBottom]];
  }
}

- (int32_t)getHeaderCount {
  return [((ADLinearLayout *) nil_chk(headerLayout_)) getChildCount];
}

- (bool)hasHeader {
  return ADXNavigationMenuPresenter_hasHeader(self);
}

- (ADView *)getHeaderViewWithInt:(int32_t)index {
  return [((ADLinearLayout *) nil_chk(headerLayout_)) getChildAtWithInt:index];
}

- (ADColorStateList *)getItemTintList {
  return iconTintList_;
}

- (void)setItemIconTintListWithADColorStateList:(ADColorStateList *)tint {
  JreStrongAssign(&iconTintList_, tint);
  [self updateMenuViewWithBoolean:false];
}

- (ADColorStateList *)getItemTextColor {
  return textColor_;
}

- (void)setItemTextColorWithADColorStateList:(ADColorStateList *)textColor {
  JreStrongAssign(&self->textColor_, textColor);
  [self updateMenuViewWithBoolean:false];
}

- (void)setItemTextAppearanceWithNSString:(NSString *)resId {
  JreStrongAssign(&textAppearance_, resId);
  [self updateMenuViewWithBoolean:false];
}

- (ADDrawable *)getItemBackground {
  return itemBackground_;
}

- (void)setItemBackgroundWithADDrawable:(ADDrawable *)itemBackground {
  JreStrongAssign(&self->itemBackground_, itemBackground);
  [self updateMenuViewWithBoolean:false];
}

- (int32_t)getItemHorizontalPadding {
  return itemHorizontalPadding_;
}

- (void)setItemHorizontalPaddingWithInt:(int32_t)itemHorizontalPadding {
  self->itemHorizontalPadding_ = itemHorizontalPadding;
  [self updateMenuViewWithBoolean:false];
}

- (int32_t)getItemVerticalPadding {
  return itemVerticalPadding_;
}

- (void)setItemVerticalPaddingWithInt:(int32_t)itemVerticalPadding {
  self->itemVerticalPadding_ = itemVerticalPadding;
  [self updateMenuViewWithBoolean:false];
}

- (void)setDividerInsetStartWithInt:(int32_t)dividerInsetStart {
  self->dividerInsetStart_ = dividerInsetStart;
  [self updateMenuViewWithBoolean:false];
}

- (void)setDividerInsetEndWithInt:(int32_t)dividerInsetEnd {
  self->dividerInsetEnd_ = dividerInsetEnd;
  [self updateMenuViewWithBoolean:false];
}

- (void)setSubheaderInsetStartWithInt:(int32_t)subheaderInsetStart {
  self->subheaderInsetStart_ = subheaderInsetStart;
  [self updateMenuViewWithBoolean:false];
}

- (void)setSubheaderInsetEndWithInt:(int32_t)subheaderInsetEnd {
  self->subheaderInsetEnd_ = subheaderInsetEnd;
  [self updateMenuViewWithBoolean:false];
}

- (int32_t)getItemIconPadding {
  return itemIconPadding_;
}

- (void)setItemIconPaddingWithInt:(int32_t)itemIconPadding {
  self->itemIconPadding_ = itemIconPadding;
  [self updateMenuViewWithBoolean:false];
}

- (void)setItemMaxLinesWithInt:(int32_t)itemMaxLines {
  self->itemMaxLines_ = itemMaxLines;
  [self updateMenuViewWithBoolean:false];
}

- (int32_t)getItemMaxLines {
  return itemMaxLines_;
}

- (void)setItemIconSizeWithInt:(int32_t)itemIconSize {
  if (self->itemIconSize_ != itemIconSize) {
    self->itemIconSize_ = itemIconSize;
    hasCustomItemIconSize_ = true;
    [self updateMenuViewWithBoolean:false];
  }
}

- (void)setUpdateSuspendedWithBoolean:(bool)updateSuspended {
  if (adapter_ != nil) {
    [adapter_ setUpdateSuspendedWithBoolean:updateSuspended];
  }
}

- (ADView *)getNavigationMenuItemViewWithADView:(ADView *)v {
  return ADXNavigationMenuPresenter_getNavigationMenuItemViewWithADView_(self, v);
}

- (void)dealloc {
  RELEASE_(menuView_);
  RELEASE_(headerLayout_);
  RELEASE_(menu_);
  RELEASE_(adapter_);
  RELEASE_(layoutInflater_);
  RELEASE_(subheaderColor_);
  RELEASE_(textColor_);
  RELEASE_(iconTintList_);
  RELEASE_(itemBackground_);
  RELEASE_(onClickListener_);
  RELEASE_(textAppearance_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "LADXRecyclerView;", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 4, 5, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 6, 7, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 8, 9, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 10, 9, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "LADView;", 0x1, 11, 7, -1, -1, -1, -1 },
    { NULL, "LADColorStateList;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 12, 13, -1, -1, -1, -1 },
    { NULL, "LADColorStateList;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 14, 13, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 15, 16, -1, -1, -1, -1 },
    { NULL, "LADDrawable;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 17, 18, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 19, 7, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 20, 7, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 21, 7, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 22, 7, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 23, 7, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 24, 7, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 25, 7, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 26, 7, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 27, 7, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 28, 5, -1, -1, -1, -1 },
    { NULL, "LADView;", 0x2, 29, 9, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(initForMenuWithADContext:withADXMenuBuilder:);
  methods[2].selector = @selector(getMenuViewWithADViewGroup:);
  methods[3].selector = @selector(updateMenuViewWithBoolean:);
  methods[4].selector = @selector(flagActionItems);
  methods[5].selector = @selector(setIdWithInt:);
  methods[6].selector = @selector(addHeaderViewWithADView:);
  methods[7].selector = @selector(removeHeaderViewWithADView:);
  methods[8].selector = @selector(getHeaderCount);
  methods[9].selector = @selector(hasHeader);
  methods[10].selector = @selector(getHeaderViewWithInt:);
  methods[11].selector = @selector(getItemTintList);
  methods[12].selector = @selector(setItemIconTintListWithADColorStateList:);
  methods[13].selector = @selector(getItemTextColor);
  methods[14].selector = @selector(setItemTextColorWithADColorStateList:);
  methods[15].selector = @selector(setItemTextAppearanceWithNSString:);
  methods[16].selector = @selector(getItemBackground);
  methods[17].selector = @selector(setItemBackgroundWithADDrawable:);
  methods[18].selector = @selector(getItemHorizontalPadding);
  methods[19].selector = @selector(setItemHorizontalPaddingWithInt:);
  methods[20].selector = @selector(getItemVerticalPadding);
  methods[21].selector = @selector(setItemVerticalPaddingWithInt:);
  methods[22].selector = @selector(setDividerInsetStartWithInt:);
  methods[23].selector = @selector(setDividerInsetEndWithInt:);
  methods[24].selector = @selector(setSubheaderInsetStartWithInt:);
  methods[25].selector = @selector(setSubheaderInsetEndWithInt:);
  methods[26].selector = @selector(getItemIconPadding);
  methods[27].selector = @selector(setItemIconPaddingWithInt:);
  methods[28].selector = @selector(setItemMaxLinesWithInt:);
  methods[29].selector = @selector(getItemMaxLines);
  methods[30].selector = @selector(setItemIconSizeWithInt:);
  methods[31].selector = @selector(setUpdateSuspendedWithBoolean:);
  methods[32].selector = @selector(getNavigationMenuItemViewWithADView:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "NO_TEXT_APPEARANCE_SET", "I", .constantValue.asInt = ADXNavigationMenuPresenter_NO_TEXT_APPEARANCE_SET, 0x19, -1, -1, -1, -1 },
    { "menuView_", "LADXRecyclerView;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "headerLayout_", "LADLinearLayout;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "menu_", "LADXMenuBuilder;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "id__", "I", .constantValue.asLong = 0, 0x2, 30, -1, -1, -1 },
    { "adapter_", "LADXNavigationMenuPresenter_NavigationMenuAdapter;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "layoutInflater_", "LADXNavigationMenuPresenter_LayoutInflater;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "subheaderTextAppearance_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "subheaderColor_", "LADColorStateList;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "textAppearanceActiveBoldEnabled_", "Z", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "textColor_", "LADColorStateList;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "iconTintList_", "LADColorStateList;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "itemBackground_", "LADDrawable;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "itemHorizontalPadding_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "itemVerticalPadding_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "itemIconPadding_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "itemIconSize_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "dividerInsetStart_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "dividerInsetEnd_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "subheaderInsetStart_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "subheaderInsetEnd_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "hasCustomItemIconSize_", "Z", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "isBehindStatusBar_", "Z", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "itemMaxLines_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "paddingTopDefault_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "paddingSeparator_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "overScrollMode_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "onClickListener_", "LADView_OnClickListener;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "textAppearance_", "LNSString;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "initForMenu", "LADContext;LADXMenuBuilder;", "getMenuView", "LADViewGroup;", "updateMenuView", "Z", "setId", "I", "addHeaderView", "LADView;", "removeHeaderView", "getHeaderView", "setItemIconTintList", "LADColorStateList;", "setItemTextColor", "setItemTextAppearance", "LNSString;", "setItemBackground", "LADDrawable;", "setItemHorizontalPadding", "setItemVerticalPadding", "setDividerInsetStart", "setDividerInsetEnd", "setSubheaderInsetStart", "setSubheaderInsetEnd", "setItemIconPadding", "setItemMaxLines", "setItemIconSize", "setUpdateSuspended", "getNavigationMenuItemView", "id", "LADXNavigationMenuPresenter_ViewHolder;LADXNavigationMenuPresenter_NormalViewHolder;LADXNavigationMenuPresenter_SubheaderViewHolder;LADXNavigationMenuPresenter_SeparatorViewHolder;LADXNavigationMenuPresenter_HeaderViewHolder;LADXNavigationMenuPresenter_NavigationMenuAdapter;LADXNavigationMenuPresenter_NavigationMenuItem;LADXNavigationMenuPresenter_NavigationMenuTextItem;LADXNavigationMenuPresenter_NavigationMenuSeparatorItem;LADXNavigationMenuPresenter_NavigationMenuHeaderItem;LADXNavigationMenuPresenter_LayoutInflater;" };
  static const J2ObjcClassInfo _ADXNavigationMenuPresenter = { "NavigationMenuPresenter", "com.google.android.material.internal", ptrTable, methods, fields, 7, 0x1, 33, 29, -1, 31, -1, -1, -1 };
  return &_ADXNavigationMenuPresenter;
}

@end

void ADXNavigationMenuPresenter_init(ADXNavigationMenuPresenter *self) {
  NSObject_init(self);
  self->subheaderTextAppearance_ = ADXNavigationMenuPresenter_NO_TEXT_APPEARANCE_SET;
  self->textAppearanceActiveBoldEnabled_ = true;
  self->isBehindStatusBar_ = true;
  self->overScrollMode_ = -1;
  JreStrongAssignAndConsume(&self->onClickListener_, new_ADXNavigationMenuPresenter_1_initWithADXNavigationMenuPresenter_(self));
}

ADXNavigationMenuPresenter *new_ADXNavigationMenuPresenter_init() {
  J2OBJC_NEW_IMPL(ADXNavigationMenuPresenter, init)
}

ADXNavigationMenuPresenter *create_ADXNavigationMenuPresenter_init() {
  J2OBJC_CREATE_IMPL(ADXNavigationMenuPresenter, init)
}

bool ADXNavigationMenuPresenter_hasHeader(ADXNavigationMenuPresenter *self) {
  return [self getHeaderCount] > 0;
}

ADView *ADXNavigationMenuPresenter_getNavigationMenuItemViewWithADView_(ADXNavigationMenuPresenter *self, ADView *v) {
  while (!([v isKindOfClass:[ADXNavigationMenuItemView class]])) {
    v = (ADView *) cast_chk([((ADView *) nil_chk(v)) getParent], [ADView class]);
  }
  return v;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ADXNavigationMenuPresenter)

J2OBJC_NAME_MAPPING(ADXNavigationMenuPresenter, "com.google.android.material.internal", "ADX")

@implementation ADXNavigationMenuPresenter_ViewHolder

- (instancetype)initWithADView:(ADView *)itemView {
  ADXNavigationMenuPresenter_ViewHolder_initWithADView_(self, itemView);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithADView:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LADView;", "LADXNavigationMenuPresenter;" };
  static const J2ObjcClassInfo _ADXNavigationMenuPresenter_ViewHolder = { "ViewHolder", "com.google.android.material.internal", ptrTable, methods, NULL, 7, 0x40a, 1, 0, 1, -1, -1, -1, -1 };
  return &_ADXNavigationMenuPresenter_ViewHolder;
}

@end

void ADXNavigationMenuPresenter_ViewHolder_initWithADView_(ADXNavigationMenuPresenter_ViewHolder *self, ADView *itemView) {
  ADXRecyclerView_ViewHolder_initWithADView_(self, itemView);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ADXNavigationMenuPresenter_ViewHolder)

@implementation ADXNavigationMenuPresenter_NormalViewHolder

- (instancetype)initWithADXNavigationMenuPresenter_LayoutInflater:(ADXNavigationMenuPresenter_LayoutInflater *)inflater
                                                  withADViewGroup:(ADViewGroup *)parent
                                       withADView_OnClickListener:(id<ADView_OnClickListener>)listener {
  ADXNavigationMenuPresenter_NormalViewHolder_initWithADXNavigationMenuPresenter_LayoutInflater_withADViewGroup_withADView_OnClickListener_(self, inflater, parent, listener);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithADXNavigationMenuPresenter_LayoutInflater:withADViewGroup:withADView_OnClickListener:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LADXNavigationMenuPresenter_LayoutInflater;LADViewGroup;LADView_OnClickListener;", "LADXNavigationMenuPresenter;" };
  static const J2ObjcClassInfo _ADXNavigationMenuPresenter_NormalViewHolder = { "NormalViewHolder", "com.google.android.material.internal", ptrTable, methods, NULL, 7, 0xa, 1, 0, 1, -1, -1, -1, -1 };
  return &_ADXNavigationMenuPresenter_NormalViewHolder;
}

@end

void ADXNavigationMenuPresenter_NormalViewHolder_initWithADXNavigationMenuPresenter_LayoutInflater_withADViewGroup_withADView_OnClickListener_(ADXNavigationMenuPresenter_NormalViewHolder *self, ADXNavigationMenuPresenter_LayoutInflater *inflater, ADViewGroup *parent, id<ADView_OnClickListener> listener) {
  ADXNavigationMenuPresenter_ViewHolder_initWithADView_(self, [((ADXNavigationMenuPresenter_LayoutInflater *) nil_chk(inflater)) inflateWithNSString:@"@layout/design_navigation_item_new" withADViewGroup:parent withBoolean:false]);
  [((ADView *) nil_chk(self->itemView_)) setMyAttributeWithNSString:@"onClick" withId:listener];
  [inflater recurseSetWithADViewGroup:(ADViewGroup *) cast_chk(self->itemView_, [ADViewGroup class]) withADView_OnClickListener:listener];
}

ADXNavigationMenuPresenter_NormalViewHolder *new_ADXNavigationMenuPresenter_NormalViewHolder_initWithADXNavigationMenuPresenter_LayoutInflater_withADViewGroup_withADView_OnClickListener_(ADXNavigationMenuPresenter_LayoutInflater *inflater, ADViewGroup *parent, id<ADView_OnClickListener> listener) {
  J2OBJC_NEW_IMPL(ADXNavigationMenuPresenter_NormalViewHolder, initWithADXNavigationMenuPresenter_LayoutInflater_withADViewGroup_withADView_OnClickListener_, inflater, parent, listener)
}

ADXNavigationMenuPresenter_NormalViewHolder *create_ADXNavigationMenuPresenter_NormalViewHolder_initWithADXNavigationMenuPresenter_LayoutInflater_withADViewGroup_withADView_OnClickListener_(ADXNavigationMenuPresenter_LayoutInflater *inflater, ADViewGroup *parent, id<ADView_OnClickListener> listener) {
  J2OBJC_CREATE_IMPL(ADXNavigationMenuPresenter_NormalViewHolder, initWithADXNavigationMenuPresenter_LayoutInflater_withADViewGroup_withADView_OnClickListener_, inflater, parent, listener)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ADXNavigationMenuPresenter_NormalViewHolder)

@implementation ADXNavigationMenuPresenter_SubheaderViewHolder

- (instancetype)initWithADXNavigationMenuPresenter_LayoutInflater:(ADXNavigationMenuPresenter_LayoutInflater *)inflater
                                                  withADViewGroup:(ADViewGroup *)parent {
  ADXNavigationMenuPresenter_SubheaderViewHolder_initWithADXNavigationMenuPresenter_LayoutInflater_withADViewGroup_(self, inflater, parent);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithADXNavigationMenuPresenter_LayoutInflater:withADViewGroup:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LADXNavigationMenuPresenter_LayoutInflater;LADViewGroup;", "LADXNavigationMenuPresenter;" };
  static const J2ObjcClassInfo _ADXNavigationMenuPresenter_SubheaderViewHolder = { "SubheaderViewHolder", "com.google.android.material.internal", ptrTable, methods, NULL, 7, 0xa, 1, 0, 1, -1, -1, -1, -1 };
  return &_ADXNavigationMenuPresenter_SubheaderViewHolder;
}

@end

void ADXNavigationMenuPresenter_SubheaderViewHolder_initWithADXNavigationMenuPresenter_LayoutInflater_withADViewGroup_(ADXNavigationMenuPresenter_SubheaderViewHolder *self, ADXNavigationMenuPresenter_LayoutInflater *inflater, ADViewGroup *parent) {
  ADXNavigationMenuPresenter_ViewHolder_initWithADView_(self, [((ADXNavigationMenuPresenter_LayoutInflater *) nil_chk(inflater)) inflateWithNSString:@"@layout/design_navigation_item_subheader_new" withADViewGroup:parent withBoolean:false]);
}

ADXNavigationMenuPresenter_SubheaderViewHolder *new_ADXNavigationMenuPresenter_SubheaderViewHolder_initWithADXNavigationMenuPresenter_LayoutInflater_withADViewGroup_(ADXNavigationMenuPresenter_LayoutInflater *inflater, ADViewGroup *parent) {
  J2OBJC_NEW_IMPL(ADXNavigationMenuPresenter_SubheaderViewHolder, initWithADXNavigationMenuPresenter_LayoutInflater_withADViewGroup_, inflater, parent)
}

ADXNavigationMenuPresenter_SubheaderViewHolder *create_ADXNavigationMenuPresenter_SubheaderViewHolder_initWithADXNavigationMenuPresenter_LayoutInflater_withADViewGroup_(ADXNavigationMenuPresenter_LayoutInflater *inflater, ADViewGroup *parent) {
  J2OBJC_CREATE_IMPL(ADXNavigationMenuPresenter_SubheaderViewHolder, initWithADXNavigationMenuPresenter_LayoutInflater_withADViewGroup_, inflater, parent)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ADXNavigationMenuPresenter_SubheaderViewHolder)

@implementation ADXNavigationMenuPresenter_SeparatorViewHolder

- (instancetype)initWithADXNavigationMenuPresenter_LayoutInflater:(ADXNavigationMenuPresenter_LayoutInflater *)inflater
                                                  withADViewGroup:(ADViewGroup *)parent {
  ADXNavigationMenuPresenter_SeparatorViewHolder_initWithADXNavigationMenuPresenter_LayoutInflater_withADViewGroup_(self, inflater, parent);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithADXNavigationMenuPresenter_LayoutInflater:withADViewGroup:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LADXNavigationMenuPresenter_LayoutInflater;LADViewGroup;", "LADXNavigationMenuPresenter;" };
  static const J2ObjcClassInfo _ADXNavigationMenuPresenter_SeparatorViewHolder = { "SeparatorViewHolder", "com.google.android.material.internal", ptrTable, methods, NULL, 7, 0xa, 1, 0, 1, -1, -1, -1, -1 };
  return &_ADXNavigationMenuPresenter_SeparatorViewHolder;
}

@end

void ADXNavigationMenuPresenter_SeparatorViewHolder_initWithADXNavigationMenuPresenter_LayoutInflater_withADViewGroup_(ADXNavigationMenuPresenter_SeparatorViewHolder *self, ADXNavigationMenuPresenter_LayoutInflater *inflater, ADViewGroup *parent) {
  ADXNavigationMenuPresenter_ViewHolder_initWithADView_(self, [((ADXNavigationMenuPresenter_LayoutInflater *) nil_chk(inflater)) inflateWithNSString:@"@layout/design_navigation_item_separator_new" withADViewGroup:parent withBoolean:false]);
}

ADXNavigationMenuPresenter_SeparatorViewHolder *new_ADXNavigationMenuPresenter_SeparatorViewHolder_initWithADXNavigationMenuPresenter_LayoutInflater_withADViewGroup_(ADXNavigationMenuPresenter_LayoutInflater *inflater, ADViewGroup *parent) {
  J2OBJC_NEW_IMPL(ADXNavigationMenuPresenter_SeparatorViewHolder, initWithADXNavigationMenuPresenter_LayoutInflater_withADViewGroup_, inflater, parent)
}

ADXNavigationMenuPresenter_SeparatorViewHolder *create_ADXNavigationMenuPresenter_SeparatorViewHolder_initWithADXNavigationMenuPresenter_LayoutInflater_withADViewGroup_(ADXNavigationMenuPresenter_LayoutInflater *inflater, ADViewGroup *parent) {
  J2OBJC_CREATE_IMPL(ADXNavigationMenuPresenter_SeparatorViewHolder, initWithADXNavigationMenuPresenter_LayoutInflater_withADViewGroup_, inflater, parent)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ADXNavigationMenuPresenter_SeparatorViewHolder)

@implementation ADXNavigationMenuPresenter_HeaderViewHolder

- (instancetype)initWithADView:(ADView *)itemView {
  ADXNavigationMenuPresenter_HeaderViewHolder_initWithADView_(self, itemView);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithADView:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LADView;", "LADXNavigationMenuPresenter;" };
  static const J2ObjcClassInfo _ADXNavigationMenuPresenter_HeaderViewHolder = { "HeaderViewHolder", "com.google.android.material.internal", ptrTable, methods, NULL, 7, 0xa, 1, 0, 1, -1, -1, -1, -1 };
  return &_ADXNavigationMenuPresenter_HeaderViewHolder;
}

@end

void ADXNavigationMenuPresenter_HeaderViewHolder_initWithADView_(ADXNavigationMenuPresenter_HeaderViewHolder *self, ADView *itemView) {
  ADXNavigationMenuPresenter_ViewHolder_initWithADView_(self, itemView);
}

ADXNavigationMenuPresenter_HeaderViewHolder *new_ADXNavigationMenuPresenter_HeaderViewHolder_initWithADView_(ADView *itemView) {
  J2OBJC_NEW_IMPL(ADXNavigationMenuPresenter_HeaderViewHolder, initWithADView_, itemView)
}

ADXNavigationMenuPresenter_HeaderViewHolder *create_ADXNavigationMenuPresenter_HeaderViewHolder_initWithADView_(ADView *itemView) {
  J2OBJC_CREATE_IMPL(ADXNavigationMenuPresenter_HeaderViewHolder, initWithADView_, itemView)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ADXNavigationMenuPresenter_HeaderViewHolder)

@implementation ADXNavigationMenuPresenter_1

- (instancetype)initWithADXNavigationMenuPresenter:(ADXNavigationMenuPresenter *)outer$ {
  ADXNavigationMenuPresenter_1_initWithADXNavigationMenuPresenter_(self, outer$);
  return self;
}

- (void)onClickWithADView:(ADView *)view {
  ADXNavigationMenuItemView *itemView = (ADXNavigationMenuItemView *) cast_chk(ADXNavigationMenuPresenter_getNavigationMenuItemViewWithADView_(this$0_, view), [ADXNavigationMenuItemView class]);
  [this$0_ setUpdateSuspendedWithBoolean:true];
  ADXMenuItemImpl *item = JreRetainedLocalValue([((ADXNavigationMenuItemView *) nil_chk(itemView)) getItemData]);
  bool result = [((ADXMenuBuilder *) nil_chk(this$0_->menu_)) performItemActionWithADMenuItem:item withADXMenuPresenter:this$0_ withInt:0];
  bool checkStateChanged = false;
  if (item != nil && [item isCheckable] && result) {
    [((ADXNavigationMenuPresenter_NavigationMenuAdapter *) nil_chk(this$0_->adapter_)) setCheckedItemWithADXMenuItemImpl:item];
    checkStateChanged = true;
  }
  [this$0_ setUpdateSuspendedWithBoolean:false];
  if (checkStateChanged) {
    [this$0_ updateMenuViewWithBoolean:false];
  }
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithADXNavigationMenuPresenter:);
  methods[1].selector = @selector(onClickWithADView:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LADXNavigationMenuPresenter;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LADXNavigationMenuPresenter;", "onClick", "LADView;" };
  static const J2ObjcClassInfo _ADXNavigationMenuPresenter_1 = { "", "com.google.android.material.internal", ptrTable, methods, fields, 7, 0x8000, 2, 1, 0, -1, -1, -1, -1 };
  return &_ADXNavigationMenuPresenter_1;
}

@end

void ADXNavigationMenuPresenter_1_initWithADXNavigationMenuPresenter_(ADXNavigationMenuPresenter_1 *self, ADXNavigationMenuPresenter *outer$) {
  JreStrongAssign(&self->this$0_, outer$);
  NSObject_init(self);
}

ADXNavigationMenuPresenter_1 *new_ADXNavigationMenuPresenter_1_initWithADXNavigationMenuPresenter_(ADXNavigationMenuPresenter *outer$) {
  J2OBJC_NEW_IMPL(ADXNavigationMenuPresenter_1, initWithADXNavigationMenuPresenter_, outer$)
}

ADXNavigationMenuPresenter_1 *create_ADXNavigationMenuPresenter_1_initWithADXNavigationMenuPresenter_(ADXNavigationMenuPresenter *outer$) {
  J2OBJC_CREATE_IMPL(ADXNavigationMenuPresenter_1, initWithADXNavigationMenuPresenter_, outer$)
}

@implementation ADXNavigationMenuPresenter_NavigationMenuAdapter

- (instancetype)initWithADXNavigationMenuPresenter:(ADXNavigationMenuPresenter *)outer$ {
  ADXNavigationMenuPresenter_NavigationMenuAdapter_initWithADXNavigationMenuPresenter_(self, outer$);
  return self;
}

- (int32_t)getItemCount {
  return [((JavaUtilArrayList *) nil_chk(items_)) size];
}

- (int32_t)getItemViewTypeWithInt:(int32_t)position {
  id<ADXNavigationMenuPresenter_NavigationMenuItem> item = JreRetainedLocalValue([((JavaUtilArrayList *) nil_chk(items_)) getWithInt:position]);
  if ([item isKindOfClass:[ADXNavigationMenuPresenter_NavigationMenuSeparatorItem class]]) {
    return ADXNavigationMenuPresenter_NavigationMenuAdapter_VIEW_TYPE_SEPARATOR;
  }
  else if ([item isKindOfClass:[ADXNavigationMenuPresenter_NavigationMenuHeaderItem class]]) {
    return ADXNavigationMenuPresenter_NavigationMenuAdapter_VIEW_TYPE_HEADER;
  }
  else if ([item isKindOfClass:[ADXNavigationMenuPresenter_NavigationMenuTextItem class]]) {
    ADXNavigationMenuPresenter_NavigationMenuTextItem *textItem = (ADXNavigationMenuPresenter_NavigationMenuTextItem *) item;
    if ([((ADXMenuItemImpl *) nil_chk([((ADXNavigationMenuPresenter_NavigationMenuTextItem *) nil_chk(textItem)) getMenuItem])) hasSubMenu]) {
      return ADXNavigationMenuPresenter_NavigationMenuAdapter_VIEW_TYPE_SUBHEADER;
    }
    else {
      return ADXNavigationMenuPresenter_NavigationMenuAdapter_VIEW_TYPE_NORMAL;
    }
  }
  @throw create_JavaLangRuntimeException_initWithNSString_(@"Unknown item type.");
}

- (ADXNavigationMenuPresenter_ViewHolder *)onCreateViewHolderWithADViewGroup:(ADViewGroup *)parent
                                                                     withInt:(int32_t)viewType {
  switch (viewType) {
    case ADXNavigationMenuPresenter_NavigationMenuAdapter_VIEW_TYPE_NORMAL:
    return create_ADXNavigationMenuPresenter_NormalViewHolder_initWithADXNavigationMenuPresenter_LayoutInflater_withADViewGroup_withADView_OnClickListener_(this$0_->layoutInflater_, parent, this$0_->onClickListener_);
    case ADXNavigationMenuPresenter_NavigationMenuAdapter_VIEW_TYPE_SUBHEADER:
    return create_ADXNavigationMenuPresenter_SubheaderViewHolder_initWithADXNavigationMenuPresenter_LayoutInflater_withADViewGroup_(this$0_->layoutInflater_, parent);
    case ADXNavigationMenuPresenter_NavigationMenuAdapter_VIEW_TYPE_SEPARATOR:
    return create_ADXNavigationMenuPresenter_SeparatorViewHolder_initWithADXNavigationMenuPresenter_LayoutInflater_withADViewGroup_(this$0_->layoutInflater_, parent);
    case ADXNavigationMenuPresenter_NavigationMenuAdapter_VIEW_TYPE_HEADER:
    if (this$0_->headerLayout_ == nil) {
      JreStrongAssign(&this$0_->headerLayout_, (ADLinearLayout *) cast_chk([((ADXNavigationMenuPresenter_LayoutInflater *) nil_chk(this$0_->layoutInflater_)) inflateWithNSString:@"@layout/design_navigation_item_header_new" withADViewGroup:this$0_->menuView_ withBoolean:false], [ADLinearLayout class]));
    }
    [((id<ASHasWidgets>) nil_chk([((id<ASIWidget>) nil_chk([((id<ASILifeCycleDecorator>) nil_chk(((id<ASILifeCycleDecorator>) cast_check(parent, ASILifeCycleDecorator_class_())))) getWidget])) getParent])) invokeMethodWithNSString:@"addHeaderView" withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ this$0_->headerLayout_ } count:1 type:NSObject_class_()]];
    return create_ADXNavigationMenuPresenter_HeaderViewHolder_initWithADView_(this$0_->headerLayout_);
  }
  return nil;
}

- (void)onBindViewHolderWithADXRecyclerView_ViewHolder:(ADXNavigationMenuPresenter_ViewHolder *)holder
                                               withInt:(int32_t)position {
  switch ([self getItemViewTypeWithInt:position]) {
    case ADXNavigationMenuPresenter_NavigationMenuAdapter_VIEW_TYPE_NORMAL:
    {
      ADXNavigationMenuItemView *itemView = (ADXNavigationMenuItemView *) cast_chk(((ADXNavigationMenuPresenter_ViewHolder *) nil_chk(holder))->itemView_, [ADXNavigationMenuItemView class]);
      [((ADXNavigationMenuItemView *) nil_chk(itemView)) setIconTintListWithADColorStateList:this$0_->iconTintList_];
      [itemView setTextAppearanceWithNSString:this$0_->textAppearance_];
      if (this$0_->textColor_ != nil) {
        [itemView setTextColorWithADColorStateList:this$0_->textColor_];
      }
      if (this$0_->itemBackground_ != nil) {
        [itemView setMyAttributeWithNSString:@"background" withId:this$0_->itemBackground_];
      }
      ADXNavigationMenuPresenter_NavigationMenuTextItem *item = (ADXNavigationMenuPresenter_NavigationMenuTextItem *) cast_chk([((JavaUtilArrayList *) nil_chk(items_)) getWithInt:position], [ADXNavigationMenuPresenter_NavigationMenuTextItem class]);
      [itemView setNeedsEmptyIconWithBoolean:((ADXNavigationMenuPresenter_NavigationMenuTextItem *) nil_chk(item))->needsEmptyIcon_];
      [itemView setPaddingWithInt:this$0_->itemHorizontalPadding_ withInt:this$0_->itemVerticalPadding_ withInt:this$0_->itemHorizontalPadding_ withInt:this$0_->itemVerticalPadding_];
      [itemView setIconPaddingWithInt:this$0_->itemIconPadding_];
      if (this$0_->hasCustomItemIconSize_) {
        [itemView setIconSizeWithInt:this$0_->itemIconSize_];
      }
      [itemView setMaxLinesWithInt:this$0_->itemMaxLines_];
      [itemView initialize__WithADXMenuItemImpl:[item getMenuItem] withBoolean:this$0_->textAppearanceActiveBoldEnabled_];
      break;
    }
    case ADXNavigationMenuPresenter_NavigationMenuAdapter_VIEW_TYPE_SUBHEADER:
    {
      ADTextView *subHeader = (ADTextView *) cast_chk(((ADXNavigationMenuPresenter_ViewHolder *) nil_chk(holder))->itemView_, [ADTextView class]);
      ADXNavigationMenuPresenter_NavigationMenuTextItem *item = (ADXNavigationMenuPresenter_NavigationMenuTextItem *) cast_chk([((JavaUtilArrayList *) nil_chk(items_)) getWithInt:position], [ADXNavigationMenuPresenter_NavigationMenuTextItem class]);
      [((ADTextView *) nil_chk(subHeader)) setTextWithNSString:[((ADXMenuItemImpl *) nil_chk([((ADXNavigationMenuPresenter_NavigationMenuTextItem *) nil_chk(item)) getMenuItem])) getTitle]];
      [subHeader setPaddingWithInt:this$0_->subheaderInsetStart_ withInt:[subHeader getPaddingTop] withInt:this$0_->subheaderInsetEnd_ withInt:[subHeader getPaddingBottom]];
      if (this$0_->subheaderColor_ != nil) {
        [subHeader setTextColorWithADColorStateList:this$0_->subheaderColor_];
      }
      break;
    }
    case ADXNavigationMenuPresenter_NavigationMenuAdapter_VIEW_TYPE_SEPARATOR:
    {
      ADXNavigationMenuPresenter_NavigationMenuSeparatorItem *item = (ADXNavigationMenuPresenter_NavigationMenuSeparatorItem *) cast_chk([((JavaUtilArrayList *) nil_chk(items_)) getWithInt:position], [ADXNavigationMenuPresenter_NavigationMenuSeparatorItem class]);
      [((ADView *) nil_chk(((ADXNavigationMenuPresenter_ViewHolder *) nil_chk(holder))->itemView_)) setPaddingWithInt:this$0_->dividerInsetStart_ withInt:[((ADXNavigationMenuPresenter_NavigationMenuSeparatorItem *) nil_chk(item)) getPaddingTop] withInt:this$0_->dividerInsetEnd_ withInt:[item getPaddingBottom]];
      break;
    }
  }
}

- (void)onViewRecycledWithADXRecyclerView_ViewHolder:(ADXNavigationMenuPresenter_ViewHolder *)holder {
  if ([holder isKindOfClass:[ADXNavigationMenuPresenter_NormalViewHolder class]]) {
    [((ADXNavigationMenuItemView *) nil_chk(((ADXNavigationMenuItemView *) cast_chk(((ADXNavigationMenuPresenter_ViewHolder *) nil_chk(holder))->itemView_, [ADXNavigationMenuItemView class])))) recycle];
  }
}

- (void)update {
  ADXNavigationMenuPresenter_NavigationMenuAdapter_prepareMenuItems(self);
  [self notifyDataSetChanged];
}

- (void)prepareMenuItems {
  ADXNavigationMenuPresenter_NavigationMenuAdapter_prepareMenuItems(self);
}

- (void)appendTransparentIconIfMissingWithInt:(int32_t)startIndex
                                      withInt:(int32_t)endIndex {
  ADXNavigationMenuPresenter_NavigationMenuAdapter_appendTransparentIconIfMissingWithInt_withInt_(self, startIndex, endIndex);
}

- (void)setCheckedItemWithADXMenuItemImpl:(ADXMenuItemImpl *)checkedItem {
  if (JreObjectEqualsEquals(self->checkedItem_, checkedItem) || ![((ADXMenuItemImpl *) nil_chk(checkedItem)) isCheckable]) {
    return;
  }
  if (self->checkedItem_ != nil) {
    [self->checkedItem_ setCheckedWithBoolean:false];
  }
  JreStrongAssign(&self->checkedItem_, checkedItem);
  [((ADXMenuItemImpl *) nil_chk(checkedItem)) setCheckedWithBoolean:true];
}

- (void)setUpdateSuspendedWithBoolean:(bool)updateSuspended {
  self->updateSuspended_ = updateSuspended;
}

- (void)dealloc {
  RELEASE_(this$0_);
  RELEASE_(items_);
  RELEASE_(checkedItem_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, 0, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "LADXNavigationMenuPresenter_ViewHolder;", 0x1, 3, 4, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 5, 6, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 7, 8, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 9, 10, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 11, 12, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 13, 14, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithADXNavigationMenuPresenter:);
  methods[1].selector = @selector(getItemCount);
  methods[2].selector = @selector(getItemViewTypeWithInt:);
  methods[3].selector = @selector(onCreateViewHolderWithADViewGroup:withInt:);
  methods[4].selector = @selector(onBindViewHolderWithADXRecyclerView_ViewHolder:withInt:);
  methods[5].selector = @selector(onViewRecycledWithADXRecyclerView_ViewHolder:);
  methods[6].selector = @selector(update);
  methods[7].selector = @selector(prepareMenuItems);
  methods[8].selector = @selector(appendTransparentIconIfMissingWithInt:withInt:);
  methods[9].selector = @selector(setCheckedItemWithADXMenuItemImpl:);
  methods[10].selector = @selector(setUpdateSuspendedWithBoolean:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LADXNavigationMenuPresenter;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "VIEW_TYPE_NORMAL", "I", .constantValue.asInt = ADXNavigationMenuPresenter_NavigationMenuAdapter_VIEW_TYPE_NORMAL, 0x1a, -1, -1, -1, -1 },
    { "VIEW_TYPE_SUBHEADER", "I", .constantValue.asInt = ADXNavigationMenuPresenter_NavigationMenuAdapter_VIEW_TYPE_SUBHEADER, 0x1a, -1, -1, -1, -1 },
    { "VIEW_TYPE_SEPARATOR", "I", .constantValue.asInt = ADXNavigationMenuPresenter_NavigationMenuAdapter_VIEW_TYPE_SEPARATOR, 0x1a, -1, -1, -1, -1 },
    { "VIEW_TYPE_HEADER", "I", .constantValue.asInt = ADXNavigationMenuPresenter_NavigationMenuAdapter_VIEW_TYPE_HEADER, 0x1a, -1, -1, -1, -1 },
    { "items_", "LJavaUtilArrayList;", .constantValue.asLong = 0, 0x12, -1, -1, 15, -1 },
    { "checkedItem_", "LADXMenuItemImpl;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "updateSuspended_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LADXNavigationMenuPresenter;", "getItemViewType", "I", "onCreateViewHolder", "LADViewGroup;I", "onBindViewHolder", "LADXNavigationMenuPresenter_ViewHolder;I", "onViewRecycled", "LADXNavigationMenuPresenter_ViewHolder;", "appendTransparentIconIfMissing", "II", "setCheckedItem", "LADXMenuItemImpl;", "setUpdateSuspended", "Z", "Ljava/util/ArrayList<Lcom/google/android/material/internal/NavigationMenuPresenter$NavigationMenuItem;>;", "Landroidx/recyclerview/widget/RecyclerView$Adapter<Lcom/google/android/material/internal/NavigationMenuPresenter$ViewHolder;>;" };
  static const J2ObjcClassInfo _ADXNavigationMenuPresenter_NavigationMenuAdapter = { "NavigationMenuAdapter", "com.google.android.material.internal", ptrTable, methods, fields, 7, 0x2, 11, 8, 0, -1, -1, 16, -1 };
  return &_ADXNavigationMenuPresenter_NavigationMenuAdapter;
}

@end

void ADXNavigationMenuPresenter_NavigationMenuAdapter_initWithADXNavigationMenuPresenter_(ADXNavigationMenuPresenter_NavigationMenuAdapter *self, ADXNavigationMenuPresenter *outer$) {
  JreStrongAssign(&self->this$0_, outer$);
  ADXRecyclerView_Adapter_init(self);
  JreStrongAssignAndConsume(&self->items_, new_JavaUtilArrayList_init());
}

ADXNavigationMenuPresenter_NavigationMenuAdapter *new_ADXNavigationMenuPresenter_NavigationMenuAdapter_initWithADXNavigationMenuPresenter_(ADXNavigationMenuPresenter *outer$) {
  J2OBJC_NEW_IMPL(ADXNavigationMenuPresenter_NavigationMenuAdapter, initWithADXNavigationMenuPresenter_, outer$)
}

ADXNavigationMenuPresenter_NavigationMenuAdapter *create_ADXNavigationMenuPresenter_NavigationMenuAdapter_initWithADXNavigationMenuPresenter_(ADXNavigationMenuPresenter *outer$) {
  J2OBJC_CREATE_IMPL(ADXNavigationMenuPresenter_NavigationMenuAdapter, initWithADXNavigationMenuPresenter_, outer$)
}

void ADXNavigationMenuPresenter_NavigationMenuAdapter_prepareMenuItems(ADXNavigationMenuPresenter_NavigationMenuAdapter *self) {
  if (self->updateSuspended_) {
    return;
  }
  self->updateSuspended_ = true;
  [((JavaUtilArrayList *) nil_chk(self->items_)) clear];
  [self->items_ addWithId:create_ADXNavigationMenuPresenter_NavigationMenuHeaderItem_init()];
  int32_t currentGroupId = -1;
  int32_t currentGroupStart = 0;
  bool currentGroupHasIcon = false;
  for (int32_t i = 0, totalSize = [((JavaUtilArrayList *) nil_chk([((ADXMenuBuilder *) nil_chk(self->this$0_->menu_)) getVisibleItems])) size]; i < totalSize; i++) {
    ADXMenuItemImpl *item = JreRetainedLocalValue([((JavaUtilArrayList *) nil_chk([((ADXMenuBuilder *) nil_chk(self->this$0_->menu_)) getVisibleItems])) getWithInt:i]);
    if ([((ADXMenuItemImpl *) nil_chk(item)) isChecked]) {
      [self setCheckedItemWithADXMenuItemImpl:item];
    }
    if ([item isCheckable]) {
      [item setExclusiveCheckableWithBoolean:false];
    }
    if ([item hasSubMenu]) {
      ADXSubMenuBuilder *subMenu = JreRetainedLocalValue([item getSubMenu]);
      if ([((ADXSubMenuBuilder *) nil_chk(subMenu)) hasVisibleItems]) {
        if (i != 0) {
          [self->items_ addWithId:create_ADXNavigationMenuPresenter_NavigationMenuSeparatorItem_initWithInt_withInt_(self->this$0_->paddingSeparator_, 0)];
        }
        [self->items_ addWithId:create_ADXNavigationMenuPresenter_NavigationMenuTextItem_initWithADXMenuItemImpl_(item)];
        bool subMenuHasIcon = false;
        int32_t subMenuStart = [self->items_ size];
        for (int32_t j = 0, size = [subMenu size]; j < size; j++) {
          ADXMenuItemImpl *subMenuItem = (ADXMenuItemImpl *) cast_chk([subMenu getItemWithInt:j], [ADXMenuItemImpl class]);
          if ([((ADXMenuItemImpl *) nil_chk(subMenuItem)) isVisible]) {
            if (!subMenuHasIcon && [subMenuItem getIcon] != nil) {
              subMenuHasIcon = true;
            }
            if ([subMenuItem isCheckable]) {
              [subMenuItem setExclusiveCheckableWithBoolean:false];
            }
            if ([item isChecked]) {
              [self setCheckedItemWithADXMenuItemImpl:item];
            }
            [self->items_ addWithId:create_ADXNavigationMenuPresenter_NavigationMenuTextItem_initWithADXMenuItemImpl_(subMenuItem)];
          }
        }
        if (subMenuHasIcon) {
          ADXNavigationMenuPresenter_NavigationMenuAdapter_appendTransparentIconIfMissingWithInt_withInt_(self, subMenuStart, [self->items_ size]);
        }
      }
    }
    else {
      int32_t groupId = [item getGroupId];
      if (groupId != currentGroupId) {
        currentGroupStart = [self->items_ size];
        currentGroupHasIcon = ([item getIcon] != nil);
        if (i != 0) {
          currentGroupStart++;
          [self->items_ addWithId:create_ADXNavigationMenuPresenter_NavigationMenuSeparatorItem_initWithInt_withInt_(self->this$0_->paddingSeparator_, self->this$0_->paddingSeparator_)];
        }
      }
      else if (!currentGroupHasIcon && [item getIcon] != nil) {
        currentGroupHasIcon = true;
        ADXNavigationMenuPresenter_NavigationMenuAdapter_appendTransparentIconIfMissingWithInt_withInt_(self, currentGroupStart, [self->items_ size]);
      }
      ADXNavigationMenuPresenter_NavigationMenuTextItem *textItem = create_ADXNavigationMenuPresenter_NavigationMenuTextItem_initWithADXMenuItemImpl_(item);
      textItem->needsEmptyIcon_ = currentGroupHasIcon;
      [self->items_ addWithId:textItem];
      currentGroupId = groupId;
    }
  }
  self->updateSuspended_ = false;
}

void ADXNavigationMenuPresenter_NavigationMenuAdapter_appendTransparentIconIfMissingWithInt_withInt_(ADXNavigationMenuPresenter_NavigationMenuAdapter *self, int32_t startIndex, int32_t endIndex) {
  for (int32_t i = startIndex; i < endIndex; i++) {
    ADXNavigationMenuPresenter_NavigationMenuTextItem *textItem = (ADXNavigationMenuPresenter_NavigationMenuTextItem *) cast_chk([((JavaUtilArrayList *) nil_chk(self->items_)) getWithInt:i], [ADXNavigationMenuPresenter_NavigationMenuTextItem class]);
    ((ADXNavigationMenuPresenter_NavigationMenuTextItem *) nil_chk(textItem))->needsEmptyIcon_ = true;
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ADXNavigationMenuPresenter_NavigationMenuAdapter)

@implementation ADXNavigationMenuPresenter_NavigationMenuItem

+ (const J2ObjcClassInfo *)__metadata {
  static const void *ptrTable[] = { "LADXNavigationMenuPresenter;" };
  static const J2ObjcClassInfo _ADXNavigationMenuPresenter_NavigationMenuItem = { "NavigationMenuItem", "com.google.android.material.internal", ptrTable, NULL, NULL, 7, 0x60a, 0, 0, 0, -1, -1, -1, -1 };
  return &_ADXNavigationMenuPresenter_NavigationMenuItem;
}

@end

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(ADXNavigationMenuPresenter_NavigationMenuItem)

@implementation ADXNavigationMenuPresenter_NavigationMenuTextItem

- (instancetype)initWithADXMenuItemImpl:(ADXMenuItemImpl *)item {
  ADXNavigationMenuPresenter_NavigationMenuTextItem_initWithADXMenuItemImpl_(self, item);
  return self;
}

- (ADXMenuItemImpl *)getMenuItem {
  return menuItem_;
}

- (void)dealloc {
  RELEASE_(menuItem_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "LADXMenuItemImpl;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithADXMenuItemImpl:);
  methods[1].selector = @selector(getMenuItem);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "menuItem_", "LADXMenuItemImpl;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "needsEmptyIcon_", "Z", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LADXMenuItemImpl;", "LADXNavigationMenuPresenter;" };
  static const J2ObjcClassInfo _ADXNavigationMenuPresenter_NavigationMenuTextItem = { "NavigationMenuTextItem", "com.google.android.material.internal", ptrTable, methods, fields, 7, 0xa, 2, 2, 1, -1, -1, -1, -1 };
  return &_ADXNavigationMenuPresenter_NavigationMenuTextItem;
}

@end

void ADXNavigationMenuPresenter_NavigationMenuTextItem_initWithADXMenuItemImpl_(ADXNavigationMenuPresenter_NavigationMenuTextItem *self, ADXMenuItemImpl *item) {
  NSObject_init(self);
  JreStrongAssign(&self->menuItem_, item);
}

ADXNavigationMenuPresenter_NavigationMenuTextItem *new_ADXNavigationMenuPresenter_NavigationMenuTextItem_initWithADXMenuItemImpl_(ADXMenuItemImpl *item) {
  J2OBJC_NEW_IMPL(ADXNavigationMenuPresenter_NavigationMenuTextItem, initWithADXMenuItemImpl_, item)
}

ADXNavigationMenuPresenter_NavigationMenuTextItem *create_ADXNavigationMenuPresenter_NavigationMenuTextItem_initWithADXMenuItemImpl_(ADXMenuItemImpl *item) {
  J2OBJC_CREATE_IMPL(ADXNavigationMenuPresenter_NavigationMenuTextItem, initWithADXMenuItemImpl_, item)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ADXNavigationMenuPresenter_NavigationMenuTextItem)

@implementation ADXNavigationMenuPresenter_NavigationMenuSeparatorItem

- (instancetype)initWithInt:(int32_t)paddingTop
                    withInt:(int32_t)paddingBottom {
  ADXNavigationMenuPresenter_NavigationMenuSeparatorItem_initWithInt_withInt_(self, paddingTop, paddingBottom);
  return self;
}

- (int32_t)getPaddingTop {
  return paddingTop_;
}

- (int32_t)getPaddingBottom {
  return paddingBottom_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithInt:withInt:);
  methods[1].selector = @selector(getPaddingTop);
  methods[2].selector = @selector(getPaddingBottom);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "paddingTop_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "paddingBottom_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "II", "LADXNavigationMenuPresenter;" };
  static const J2ObjcClassInfo _ADXNavigationMenuPresenter_NavigationMenuSeparatorItem = { "NavigationMenuSeparatorItem", "com.google.android.material.internal", ptrTable, methods, fields, 7, 0xa, 3, 2, 1, -1, -1, -1, -1 };
  return &_ADXNavigationMenuPresenter_NavigationMenuSeparatorItem;
}

@end

void ADXNavigationMenuPresenter_NavigationMenuSeparatorItem_initWithInt_withInt_(ADXNavigationMenuPresenter_NavigationMenuSeparatorItem *self, int32_t paddingTop, int32_t paddingBottom) {
  NSObject_init(self);
  self->paddingTop_ = paddingTop;
  self->paddingBottom_ = paddingBottom;
}

ADXNavigationMenuPresenter_NavigationMenuSeparatorItem *new_ADXNavigationMenuPresenter_NavigationMenuSeparatorItem_initWithInt_withInt_(int32_t paddingTop, int32_t paddingBottom) {
  J2OBJC_NEW_IMPL(ADXNavigationMenuPresenter_NavigationMenuSeparatorItem, initWithInt_withInt_, paddingTop, paddingBottom)
}

ADXNavigationMenuPresenter_NavigationMenuSeparatorItem *create_ADXNavigationMenuPresenter_NavigationMenuSeparatorItem_initWithInt_withInt_(int32_t paddingTop, int32_t paddingBottom) {
  J2OBJC_CREATE_IMPL(ADXNavigationMenuPresenter_NavigationMenuSeparatorItem, initWithInt_withInt_, paddingTop, paddingBottom)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ADXNavigationMenuPresenter_NavigationMenuSeparatorItem)

@implementation ADXNavigationMenuPresenter_NavigationMenuHeaderItem

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ADXNavigationMenuPresenter_NavigationMenuHeaderItem_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LADXNavigationMenuPresenter;" };
  static const J2ObjcClassInfo _ADXNavigationMenuPresenter_NavigationMenuHeaderItem = { "NavigationMenuHeaderItem", "com.google.android.material.internal", ptrTable, methods, NULL, 7, 0xa, 1, 0, 0, -1, -1, -1, -1 };
  return &_ADXNavigationMenuPresenter_NavigationMenuHeaderItem;
}

@end

void ADXNavigationMenuPresenter_NavigationMenuHeaderItem_init(ADXNavigationMenuPresenter_NavigationMenuHeaderItem *self) {
  NSObject_init(self);
}

ADXNavigationMenuPresenter_NavigationMenuHeaderItem *new_ADXNavigationMenuPresenter_NavigationMenuHeaderItem_init() {
  J2OBJC_NEW_IMPL(ADXNavigationMenuPresenter_NavigationMenuHeaderItem, init)
}

ADXNavigationMenuPresenter_NavigationMenuHeaderItem *create_ADXNavigationMenuPresenter_NavigationMenuHeaderItem_init() {
  J2OBJC_CREATE_IMPL(ADXNavigationMenuPresenter_NavigationMenuHeaderItem, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ADXNavigationMenuPresenter_NavigationMenuHeaderItem)

@implementation ADXNavigationMenuPresenter_LayoutInflater

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ADXNavigationMenuPresenter_LayoutInflater_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (ADXNavigationMenuPresenter_LayoutInflater *)fromWithADContext:(ADContext *)context {
  return ADXNavigationMenuPresenter_LayoutInflater_fromWithADContext_(context);
}

- (ADView *)inflateWithNSString:(NSString *)layout
                withADViewGroup:(ADViewGroup *)parent
                    withBoolean:(bool)b {
  return [((ADViewGroup *) nil_chk(parent)) inflateViewWithNSString:layout];
}

- (void)recurseSetWithADViewGroup:(ADViewGroup *)parent
       withADView_OnClickListener:(id<ADView_OnClickListener>)onClickListener {
  if ([((NSString *) nil_chk(ASPluginInvoker_getOS())) java_equalsIgnoreCase:@"swt"]) {
    for (int32_t i = 0; i < [((ADViewGroup *) nil_chk(parent)) getChildCount]; i++) {
      ADView *child = JreRetainedLocalValue([parent getChildAtWithInt:i]);
      [((ADView *) nil_chk(child)) setMyAttributeWithNSString:@"onClick" withId:onClickListener];
      if ([child isKindOfClass:[ADViewGroup class]]) {
        [self recurseSetWithADViewGroup:(ADViewGroup *) child withADView_OnClickListener:onClickListener];
      }
    }
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LADXNavigationMenuPresenter_LayoutInflater;", 0x9, 0, 1, -1, -1, -1, -1 },
    { NULL, "LADView;", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 4, 5, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(fromWithADContext:);
  methods[2].selector = @selector(inflateWithNSString:withADViewGroup:withBoolean:);
  methods[3].selector = @selector(recurseSetWithADViewGroup:withADView_OnClickListener:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "from", "LADContext;", "inflate", "LNSString;LADViewGroup;Z", "recurseSet", "LADViewGroup;LADView_OnClickListener;", "LADXNavigationMenuPresenter;" };
  static const J2ObjcClassInfo _ADXNavigationMenuPresenter_LayoutInflater = { "LayoutInflater", "com.google.android.material.internal", ptrTable, methods, NULL, 7, 0x9, 4, 0, 6, -1, -1, -1, -1 };
  return &_ADXNavigationMenuPresenter_LayoutInflater;
}

@end

void ADXNavigationMenuPresenter_LayoutInflater_init(ADXNavigationMenuPresenter_LayoutInflater *self) {
  NSObject_init(self);
}

ADXNavigationMenuPresenter_LayoutInflater *new_ADXNavigationMenuPresenter_LayoutInflater_init() {
  J2OBJC_NEW_IMPL(ADXNavigationMenuPresenter_LayoutInflater, init)
}

ADXNavigationMenuPresenter_LayoutInflater *create_ADXNavigationMenuPresenter_LayoutInflater_init() {
  J2OBJC_CREATE_IMPL(ADXNavigationMenuPresenter_LayoutInflater, init)
}

ADXNavigationMenuPresenter_LayoutInflater *ADXNavigationMenuPresenter_LayoutInflater_fromWithADContext_(ADContext *context) {
  ADXNavigationMenuPresenter_LayoutInflater_initialize();
  return create_ADXNavigationMenuPresenter_LayoutInflater_init();
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ADXNavigationMenuPresenter_LayoutInflater)
